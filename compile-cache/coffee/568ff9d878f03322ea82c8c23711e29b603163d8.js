(function() {
  var DO, DOEND, END, Point, Range, _ref;

  DO = "do";

  END = "end";

  DOEND = /(do|end)/;

  _ref = require("atom"), Range = _ref.Range, Point = _ref.Point;

  module.exports.handleMatch = function(editor, e) {
    var bufferPos, counter, fromBeginning, lastLineNo, toEnd, word;
    lastLineNo = editor.buffer.lines.length - 1;
    bufferPos = e.cursor.getBufferPosition().toArray();
    console.log(bufferPos);
    fromBeginning = new Range([0, 0], bufferPos);
    toEnd = new Range(bufferPos, [lastLineNo, 0]);
    word = editor.getWordUnderCursor();
    counter = 0;
    if (word === DO) {
      editor.scanInBufferRange(DOEND, toEnd, function(_arg) {
        var m;
        m = _arg.matchText;
        if (m === DO) {
          counter++;
        }
        if (m === END && counter) {
          return counter--;
        } else {
          return console.log(found);
        }
      });
    }
    if (word === END) {
      return editor.backwardsScanInBufferRange(DOEND, fromBeginning, function(m) {
        if (m === END) {
          counter++;
        }
        if (m === DO && counter) {
          return counter--;
        } else {
          return console.log(found);
        }
      });
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvaXJhYXN0YS8uYXRvbS9wYWNrYWdlcy9hdXRvY29tcGxldGUtZWxpeGlyL2xpYi9hbGNoZW1pZGUvZG9lbmRtYXRjaGVyLmNvZmZlZSIKICBdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUEsTUFBQSxrQ0FBQTs7QUFBQSxFQUFBLEVBQUEsR0FBSyxJQUFMLENBQUE7O0FBQUEsRUFDQSxHQUFBLEdBQU0sS0FETixDQUFBOztBQUFBLEVBRUEsS0FBQSxHQUFRLFVBRlIsQ0FBQTs7QUFBQSxFQUdBLE9BQWlCLE9BQUEsQ0FBUSxNQUFSLENBQWpCLEVBQUMsYUFBQSxLQUFELEVBQVEsYUFBQSxLQUhSLENBQUE7O0FBQUEsRUFNQSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQWYsR0FBNkIsU0FBQyxNQUFELEVBQVMsQ0FBVCxHQUFBO0FBQzNCLFFBQUEsMERBQUE7QUFBQSxJQUFBLFVBQUEsR0FBYSxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFwQixHQUE2QixDQUExQyxDQUFBO0FBQUEsSUFDQSxTQUFBLEdBQVksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxpQkFBVCxDQUFBLENBQTRCLENBQUMsT0FBN0IsQ0FBQSxDQURaLENBQUE7QUFBQSxJQUVBLE9BQU8sQ0FBQyxHQUFSLENBQVksU0FBWixDQUZBLENBQUE7QUFBQSxJQUdBLGFBQUEsR0FBb0IsSUFBQSxLQUFBLENBQU0sQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFOLEVBQWEsU0FBYixDQUhwQixDQUFBO0FBQUEsSUFJQSxLQUFBLEdBQW9CLElBQUEsS0FBQSxDQUFNLFNBQU4sRUFBaUIsQ0FBQyxVQUFELEVBQWEsQ0FBYixDQUFqQixDQUpwQixDQUFBO0FBQUEsSUFNQSxJQUFBLEdBQU8sTUFBTSxDQUFDLGtCQUFQLENBQUEsQ0FOUCxDQUFBO0FBQUEsSUFPQSxPQUFBLEdBQVUsQ0FQVixDQUFBO0FBUUEsSUFBQSxJQUFHLElBQUEsS0FBUSxFQUFYO0FBQ0UsTUFBQSxNQUFNLENBQUMsaUJBQVAsQ0FBeUIsS0FBekIsRUFBZ0MsS0FBaEMsRUFBdUMsU0FBQyxJQUFELEdBQUE7QUFDckMsWUFBQSxDQUFBO0FBQUEsUUFEbUQsSUFBYixLQUFFLFNBQ3hDLENBQUE7QUFBQSxRQUFBLElBQUcsQ0FBQSxLQUFLLEVBQVI7QUFBZ0IsVUFBQSxPQUFBLEVBQUEsQ0FBaEI7U0FBQTtBQUNBLFFBQUEsSUFBRyxDQUFBLEtBQUssR0FBTCxJQUFZLE9BQWY7aUJBQTRCLE9BQUEsR0FBNUI7U0FBQSxNQUFBO2lCQUVFLE9BQU8sQ0FBQyxHQUFSLENBQVksS0FBWixFQUZGO1NBRnFDO01BQUEsQ0FBdkMsQ0FBQSxDQURGO0tBUkE7QUFjQSxJQUFBLElBQUcsSUFBQSxLQUFRLEdBQVg7YUFDRSxNQUFNLENBQUMsMEJBQVAsQ0FBa0MsS0FBbEMsRUFBeUMsYUFBekMsRUFBd0QsU0FBQyxDQUFELEdBQUE7QUFDdEQsUUFBQSxJQUFHLENBQUEsS0FBSyxHQUFSO0FBQWlCLFVBQUEsT0FBQSxFQUFBLENBQWpCO1NBQUE7QUFDQSxRQUFBLElBQUcsQ0FBQSxLQUFLLEVBQUwsSUFBVyxPQUFkO2lCQUEyQixPQUFBLEdBQTNCO1NBQUEsTUFBQTtpQkFFRSxPQUFPLENBQUMsR0FBUixDQUFZLEtBQVosRUFGRjtTQUZzRDtNQUFBLENBQXhELEVBREY7S0FmMkI7RUFBQSxDQU43QixDQUFBO0FBQUEiCn0=

//# sourceURL=/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/doendmatcher.coffee
