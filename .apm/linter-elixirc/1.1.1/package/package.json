{"name":"linter-elixirc","version":"1.1.1","linter-package":true,"main":"./lib/init","description":"Bare Minimum Elixir lint package","repository":{"type":"git","url":"git+https://github.com/AtomLinter/linter-elixirc.git"},"license":"MIT","engines":{"atom":">0.50.0"},"providedServices":{"linter":{"versions":{"1.0.0":"provideLinter"}}},"package-deps":["linter"],"dependencies":{"atom-linter":"^3.2.2","atom-package-deps":"^2.1.3"},"readme":"# linter-elixirc\n\nThis linter plugin for [Linter][linter] provides an interface to elixirc/mix.\nIt will be used with files that have the \"source.elixir\" syntax (ie. `*.ex; *.exs`).\n\nThere are limitations with ElixirC that:\n\n- in case of compilation error, it will only show first error\n- it does not work with buffers, so linting on fly is disabled\n\n## Installation\nPlugin requires Linter package and it should install it by itself.\nIf it did not, please follow Linter instructions [here][linter].\n\n### Method 1: In console\n```\n$ apm install linter-elixirc\n```\n\n### Method 2: In Atom\n\n1. Edit > Preferences (Ctrl+,)\n2. Install > Search \"linter-elixirc\" > Install\n\n## Settings\n\nPlugin should work with default settings. If not:\n\n1. Edit > Preferences (Ctrl+,)\n2. Packages > Search \"linter-elixirc\" > Settings\n3. Elixirc path - use `which elixirc` to find path. ie. `/usr/local/bin/elixirc`\n4. Mix path - use `which mix` to find path. ie. `/usr/local/bin/mix`\n5. Always use elixirc - leave it disabled, unless `mix compile` is too slow.\n\n## Usage\n\nIf you open folder with mix project (`mix.exs` exists in project's root folder), linter\nwill use `mix compile` to include all dependencies, unless you enable\n\"Always use elixirc\" setting.\n\nIf you open single file, linter will use `elixirc`. This will try to find dependencies\nin a place where mix projects do (\\_build/dev/lib/\\*/ebin). If dependency path is different, then\nevery external dependency will trigger CompileError.\n\nSince `*.ex` files are not compiled by `mix compile`, they are always linted\nusing `elixirc`.\n\n[linter]: https://github.com/AtomLinter/Linter\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/AtomLinter/linter-elixirc/issues"},"homepage":"https://github.com/AtomLinter/linter-elixirc#readme","_id":"linter-elixirc@1.1.1","_shasum":"9f3e484d2a5cc39a0c36c7c16562b63e23fdd14a","_resolved":"file:../d-115116-27960-1cucq6r/package.tgz","_from":"../d-115116-27960-1cucq6r/package.tgz"}