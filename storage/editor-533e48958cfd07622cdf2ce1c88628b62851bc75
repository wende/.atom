{"mode":"editor","version":1,"windowDimensions":{"x":65,"y":24,"width":1301,"height":744,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/home/iraasta/.atom/packages"],"buffers":[{"text":"IS_ELIXIR = true\n\nextend = require \"extend\"\nautocomplete = \"autocompleter/autocomplete.exs\"\nProcess = require(\"atom\").BufferedProcess\n\nspawn = require('child_process').spawn\npath = require 'path'\nfs = require 'fs'\n\n\nout = null\ninp  = null\nprojectPaths = null;\nlastError = null;\n\nerror = (e) -> atom.notifications.addError(\"Woops. Something went bananas \\n Error: #{e}\") #console.log(\"Err: #{e}\")\n\nexports.init = (pP) ->\n  projectPaths = pP;\n  p = path.join(__dirname, autocomplete)\n  array = projectPaths\n  stderr = (e) -> lastError = e #console.log(\"Err: #{e}\")\n  exit = (e) -> console.error(\"CLOSED #{e}, Last Error: #{lastError}\"); exports.init(projectPaths)\n\n  array.push(p)\n  name = if IS_ELIXIR then 'autocomplete-elixir' else 'autocomplete-erlang'\n  setting = atom.config.get(\"#{name}.elixirPath\").replace(/elixir$/,\"\")\n  command = path.join ( setting || \"\") , \"elixir\"\n\n  erlPath = atom.config.get(\"#{name}.erlangHome\")\n  if !erlPath\n    atom.notifications.addError('Erlang home configuration setting missing')\n  options = {\n    env: extend({\n      ERL_HOME: erlPath,\n      ERL_PATH: path.join(erlPath, 'erl')\n    }, process.env)\n  }\n\n  console.log(setting)\n  ac = new Process({\n    command: command,\n    options: options,\n    args: array.reverse(), stderr, exit, stdout: ->})\n  unless ac.process then exports.init(pP)\n\n  out = ac.process.stdout\n  inp = ac.process.stdin\n\n\n\nexports.getAutocompletion = (prefix, cb) ->\n  unless inp then exports.init(projectPaths)\n  if prefix.trim().length < 1\n    cb()\n    return\n  cmd = if IS_ELIXIR then \"a\" else \"ea\"\n  inp.write \"#{cmd} #{prefix}\\n\"\n  waitTillEnd (chunk) ->\n    [_, one, multi] = chunk.split(\"<>\")\n    cb({one, multi: multi.split(\";\").filter((a) -> a.trim())})\n\nexports.loadFile =          (path,   cb = (->)) ->\n  unless inp then exports.init(projectPaths)\n  unless /.ex$/.test(path)\n    cb()\n    return\n  inp.write \"l #{path}\\n\"\n  waitTillEnd (chunk) ->\n    console.log(\"File load #{path} -> #{chunk}\")\n    if cb then cb(chunk)\n\nwaitTillEnd = (cb) ->\n  chunk = \"\"\n\n  fn = (data) ->\n    chunk += data\n    if ~chunk.indexOf(\"ok.\")\n      out.removeListener \"data\", fn\n      cb chunk.replace(\"ok.\", \"\")\n  out.on \"data\", fn\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":16,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":35,"column":24},"end":{"row":35,"column":24}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":11,"undoStack":[{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[33,0],[34,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[33,0],[34,0]],"newRange":[[33,0],[33,0]],"oldText":"    return false\n","newText":""}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[33,0],[33,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[33,0],[33,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[33,4],[33,6]],"newRange":[[33,4],[33,4]],"oldText":"# ","newText":""}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[33,0],[33,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[33,0],[33,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[33,4],[33,4]],"newRange":[[33,4],[33,6]],"oldText":"","newText":"# "}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[33,0],[33,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[33,0],[33,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[33,0],[34,0]],"newRange":[[33,0],[33,0]],"oldText":"  options = {\n","newText":""}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[33,0],[33,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}]},"encoding":"utf8","filePath":"/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/wrapper.coffee","digestWhenLastPersisted":"6d1922e2838c9aafd12ea4cfee1823ada915ede8","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"defmodule Test do\n\n\n  defmacro a :: b do\n    IO.puts(\"test #{a} #{b}\")\n    Enum.\n  end\n\n\n  def test(a,b) do\n    a :: b\n  end\nend\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":0,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":5,"column":9},"end":{"row":5,"column":9}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":23,"undoStack":[{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[5,4],[5,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,4],[5,4]],"newRange":[[5,4],[5,5]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[5,5],[5,5]],"newRange":[[5,5],[5,6]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[5,6],[5,6]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[5,6],[5,6]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,6],[5,6]],"newRange":[[5,6],[5,7]],"oldText":"","newText":"f"}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[5,7],[5,7]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[5,7],[5,7]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,6],[5,7]],"newRange":[[5,6],[5,6]],"oldText":"f","newText":""}},{"type":"change","content":{"oldRange":[[5,5],[5,6]],"newRange":[[5,5],[5,5]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[5,4],[5,5]],"newRange":[[5,4],[5,4]],"oldText":"d","newText":""}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[5,4],[5,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[5,4],[5,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,4],[5,4]],"newRange":[[5,4],[5,5]],"oldText":"","newText":"E"}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[5,5],[5,5]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[5,5],[5,5]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,4],[5,5]],"newRange":[[5,4],[5,4]],"oldText":"E","newText":""}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[5,4],[5,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[6,5],[6,5]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,0],[5,4]],"newRange":[[5,0],[5,0]],"oldText":"    ","newText":""}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[6,5],[6,5]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[5,0],[5,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,0],[5,0]],"newRange":[[5,0],[5,4]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[5,4],[5,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"2-0":{"range":[[5,4],[5,4]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[5,4],[5,4]],"newRange":[[5,4],[5,5]],"oldText":"","newText":"E"}},{"type":"change","content":{"oldRange":[[5,5],[5,5]],"newRange":[[5,5],[5,6]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[5,6],[5,6]],"newRange":[[5,6],[5,7]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[5,7],[5,7]],"newRange":[[5,7],[5,8]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[5,8],[5,8]],"newRange":[[5,8],[5,9]],"oldText":"","newText":"."}},{"type":"group-end","snapshot":{"2":{"2-0":{"range":[[5,9],[5,9]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/test.ex","digestWhenLastPersisted":"9c0928c7a78eab807da5dfc9be0a83f1bd1a72f1","preferredLineEnding":null,"deserializer":"TextBuffer","version":4}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"SettingsView","version":2,"activePanelName":"Install","uri":"atom://config"},{"deserializer":"TextEditor","id":1009,"softTabs":true,"firstVisibleScreenRow":13,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":1010,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/wrapper.coffee","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":1013,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":1014,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/test.ex","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/wrapper.coffee","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-coffee-script","language-javascript","language-elixir","language-hyperlink","language-todo"],"destroyedItemURIs":["atom://incompatible-packages","/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/typer/test/test_helper.exs","/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/wrapper.coffee.orig","/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/autocompleter/autocomplete.exs","/home/iraasta/.atom/packages/autocomplete-elixir/package.json","atom://deprecation-cop","/home/iraasta/.atom/packages/autocomplete-elixir/lib/autocomplete-elixir-client.coffee","atom://config/packages/term2","/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/typer/test/typer_test.exs","/home/iraasta/.atom/packages/autocomplete-elixir","/home/iraasta/.atom/packages/autocomplete-elixir/lib/autocomplete-elixir.coffee","/home/iraasta/.atom/packages/autocomplete-elixir/lib/autocomplete-elixir-provider.coffee","/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/typer/config/config.exs"]},"packageStates":{"find-and-replace":{"findOptions":{"findPattern":"options","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["elixi","iselix","new RegEx","depende","pairWithSpec","Regex","new","Requi","pairWi","getSpec","log","Err","extend","exte","extend","options"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/wrapper.coffee":1450288639549,"/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/test.ex":1450288623085},"metrics":{"sessionLength":309513},"tree-view":{"directoryExpansionStates":{"/home/iraasta/.atom/packages":{"isExpanded":true,"entries":{"atom-lint":{"isExpanded":false,"entries":{}},"atom-material-syntax":{"isExpanded":false,"entries":{}},"atom-material-ui":{"isExpanded":false,"entries":{}},"atom-terminal":{"isExpanded":false,"entries":{}},"autocomplete-erlang-2.0":{"isExpanded":false,"entries":{}},"autocomplete-paths":{"isExpanded":false,"entries":{}},"delorean":{"isExpanded":false,"entries":{}},"editor-stats":{"isExpanded":false,"entries":{}},"git-control":{"isExpanded":false,"entries":{}},"language-elixir":{"isExpanded":false,"entries":{}},"language-erlang":{"isExpanded":false,"entries":{}},"layout-manager":{"isExpanded":false,"entries":{}},"linter":{"isExpanded":false,"entries":{}},"linter-elixirc":{"isExpanded":false,"entries":{}},"linter-erlc":{"isExpanded":false,"entries":{}},"merge-conflicts":{"isExpanded":false,"entries":{}},"mocha-test-runner":{"isExpanded":false,"entries":{}},"term":{"isExpanded":false,"entries":{}},"term2":{"isExpanded":false,"entries":{}},"tool-bar":{"isExpanded":false,"entries":{}},"tool-bar-main":{"isExpanded":false,"entries":{}},"unity-ui":{"isExpanded":false,"entries":{}},"autocomplete-elixir":{"isExpanded":true,"entries":{"lib":{"isExpanded":true,"entries":{"alchemide":{"isExpanded":true,"entries":{"autocompleter":{"isExpanded":false,"entries":{}},"typer":{"isExpanded":false,"entries":{}}}}}},"node_modules":{"isExpanded":false,"entries":{}},"snippets":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}}}}}}},"selectedPath":"/home/iraasta/.atom/packages/autocomplete-elixir/lib/alchemide/wrapper.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":336},"keybinding-resolver":{},"tabs":[{}],"linter":{"scope":"File"}},"fullScreen":false}