{"mode":"editor","version":1,"windowDimensions":{"x":65,"y":24,"width":1301,"height":744,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/iraasta/.atom"],"buffers":[{"text":"$ = require('jquery')\nString.prototype.replaceAll = (s,r) -> @split(s).join(r)\n\nmodule.exports =\nclass RsenseClient\n  projectPath: null\n  serverUrl: null\n\n  constructor: ->\n    @projectPath = atom.project.getPaths()[0]\n    port = atom.config.get('autocomplete-erlang.port')\n    @serverUrl = \"http://localhost:4321/erl/complete\"\n\n  checkCompletion: (editor, buffer, row, column, prefix, callback) ->\n    code = buffer.getText().replaceAll '\\n', '\\n'\n\n\n    console.log \"getting \" + prefix\n    $.ajax @serverUrl,\n      type: 'GET'\n      data: {word: prefix}\n      error: (jqXHR, textStatus, errorThrown) ->\n        console.error textStatus\n      success: (data, textStatus, jqXHR) ->\n        console.log data\n        callback(JSON.parse(data).result.map (a)-> {name: a, qualified_name:a, kind:\"erl\"})\n\n\n    return []\n","markers":{"markers":{"1":{"id":1,"range":[[16,0],[16,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":84,"goalBufferRange":null,"autoscroll":true,"skipAtomicTokens":true,"preserveFolds":true},"deserializer":"Marker"},"177":{"id":177,"range":[[20,19],[20,25]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"188":{"id":188,"range":[[23,43],[23,43]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"205":{"id":205,"range":[[26,0],[26,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"218":{"id":218,"range":[[25,44],[25,91]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"227":{"id":227,"range":[[25,44],[25,91]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"248":{"id":248,"range":[[25,44],[25,91]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"314":{"id":314,"range":[[25,51],[25,89]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"447":{"id":447,"range":[[25,84],[25,88]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"479":{"id":479,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang-client.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e57a7f6557f985cc4b9471b5d5943a7c8d74ad24","deserializer":"TextBuffer"},{"text":"RsenseClient = require './autocomplete-erlang-client.coffee'\n\nmodule.exports =\nclass RsenseProvider\n  id: 'autocomplete-erlang-provider'\n  selector: '.source.erlang'\n  rsenseClient: null\n\n  constructor: ->\n    @rsenseClient = new RsenseClient()\n\n  requestHandler: (options) ->\n    return new Promise (resolve) =>\n      # rsense expects 1-based positions\n      row = options.cursor.getBufferRow() + 1\n      col = options.cursor.getBufferColumn() + 1\n\n      prefix = options.editor.getTextInBufferRange([[row-1 ,0],[row-1, col-1]])\n      matcher = /\\S*(\\w|:)$/.exec(prefix)\n      unless matcher then resolve([])\n      prefix = matcher[0]\n      options.prefix = prefix\n\n      completions = @rsenseClient.checkCompletion(options.editor,\n      options.buffer, row, col, options.prefix, (completions) =>\n        suggestions = @findSuggestions(options.prefix, completions)\n        return resolve() unless suggestions?.length\n        return resolve(suggestions)\n      )\n\n  findSuggestions: (prefix, completions) ->\n    if completions?\n      suggestions = []\n      for completion in completions when completion.name isnt prefix\n        kind = completion.kind.toLowerCase()\n        word = completion.name\n        count = parseInt(/\\d*$/.exec(word)) || 0;\n        if count\n          word = word.split(\"/\")[0] + \"(\"\n          i = 0\n          while ++i <= count then word += \"${#{i}:#{i}}\" + (if i != count then \",\" else \")\")\n          word += \"${#{count+1}:_}\"\n        [..., last] = prefix.split(\":\")\n        suggestion =\n          snippet: word\n          prefix: last\n          label: \"#{completion.qualified_name}\"\n        suggestions.push(suggestion)\n      return suggestions\n    return []\n\n  dispose: ->\n","markers":{"markers":{"1":{"id":1,"range":[[32,8],[32,8]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":88,"goalBufferRange":null,"preserveFolds":true,"autoscroll":true,"skipAtomicTokens":true},"deserializer":"Marker"},"12":{"id":12,"range":[[31,0],[31,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"44":{"id":44,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"51":{"id":51,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"76":{"id":76,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"83":{"id":83,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"96":{"id":96,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"183":{"id":183,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"206":{"id":206,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"211":{"id":211,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"237":{"id":237,"range":[[36,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"278":{"id":278,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"331":{"id":331,"range":[[36,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"350":{"id":350,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"357":{"id":357,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"366":{"id":366,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"373":{"id":373,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"412":{"id":412,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"421":{"id":421,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"428":{"id":428,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"435":{"id":435,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"515":{"id":515,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"520":{"id":520,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"531":{"id":531,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"538":{"id":538,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"539":{"id":539,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"550":{"id":550,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"555":{"id":555,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"568":{"id":568,"range":[[46,0],[46,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"595":{"id":595,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"602":{"id":602,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"639":{"id":639,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"644":{"id":644,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"655":{"id":655,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"662":{"id":662,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"669":{"id":669,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"678":{"id":678,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"693":{"id":693,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"808":{"id":808,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"845":{"id":845,"range":[[43,0],[43,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang-provider.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"33043ef207999da0b923a59a04970381bc5ea1f2","deserializer":"TextBuffer"},{"text":"RsenseProvider = require './autocomplete-erlang-provider.coffee'\nrequire \"./server/static\"\n\nmodule.exports =\n  config:\n    port:\n      description: 'The port the rsense server is running on'\n      type: 'integer'\n      default: 47367\n      minimum: 1024\n      maximum: 65535\n\n  rsenseProvider: null\n\n  activate: (state) ->\n    @rsenseProvider = new RsenseProvider()\n\n  provideAutocompletion: ->\n    {providers: [@rsenseProvider]}\n\n  deactivate: ->\n    @rsenseProvider?.dispose()\n    @rsenseProvider = null\n","markers":{"markers":{"1":{"id":1,"range":[[9,19],[9,19]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":92,"goalBufferRange":null,"preserveFolds":true,"skipAtomicTokens":true},"deserializer":"Marker"},"2":{"id":2,"range":[[1,8],[1,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"75212bdcb845b0ac01fc26b60b05c3b368057c51","deserializer":"TextBuffer"},{"text":"RsenseProvider = require './autocomplete-ruby-provider.coffee'\n\nmodule.exports =\n  config:\n    port:\n      description: 'The port the rsense server is running on'\n      type: 'integer'\n      default: 47367\n      minimum: 1024\n      maximum: 65535\n\n  rsenseProvider: null\n\n  activate: (state) ->\n    @rsenseProvider = new RsenseProvider()\n\n  provideAutocompletion: ->\n    {providers: [@rsenseProvider]}\n\n  deactivate: ->\n    @rsenseProvider?.dispose()\n    @rsenseProvider = null\n","markers":{"markers":{"1":{"id":1,"range":[[19,16],[19,16]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":132,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/packages/autocomplete-ruby/lib/autocomplete-ruby.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e0ce8999f6f8af12a522e8a64540ac7344bb1abb","deserializer":"TextBuffer"},{"text":"# Atom Autocomplete+ Erlang Suggestions\n","markers":{"markers":{"1":{"id":1,"range":[[1,0],[1,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":446,"goalBufferRange":null,"autoscroll":false,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/packages/autocomplete-erlang/README.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"3ec33f794c953b11711c54be2c6708041081cc63","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":84,"softTabs":true,"displayBuffer":{"id":85,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang-client.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":88,"softTabs":true,"displayBuffer":{"id":89,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang-provider.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":446,"softTabs":true,"displayBuffer":{"id":447,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/packages/autocomplete-erlang/README.md","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":132,"softTabs":true,"displayBuffer":{"id":133,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/packages/autocomplete-ruby/lib/autocomplete-ruby.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"deserializer":"SettingsView","version":2,"activePanelName":"Install","uri":"atom://config"},{"id":92,"softTabs":true,"displayBuffer":{"id":93,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang.coffee","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-coffee-script","language-gfm","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang-client.coffee":1427216296113,"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang-provider.coffee":1427218042391,"/home/iraasta/.atom/packages/autocomplete-erlang/README.md":1427208886262,"/home/iraasta/.atom/packages/autocomplete-ruby/lib/autocomplete-ruby.coffee":1427216534612,"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang.coffee":1427707279630},"metrics":{"sessionLength":5553},"tree-view":{"directoryExpansionStates":{"/home/iraasta/.atom":{"isExpanded":true,"entries":{".apm":{"isExpanded":false,"entries":{}},".node-gyp":{"isExpanded":false,"entries":{}},"compile-cache":{"isExpanded":false,"entries":{}},"packages":{"isExpanded":true,"entries":{"atom-lint":{"isExpanded":false,"entries":{}},"atom-terminal":{"isExpanded":false,"entries":{}},"autocomplete-elixir":{"isExpanded":false,"entries":{}},"autocomplete-erlang":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"lib":{"isExpanded":true,"entries":{"server":{"isExpanded":true,"entries":{"build":{"isExpanded":false,"entries":{}},"erlang":{"isExpanded":true,"entries":{}},"pty.js":{"isExpanded":false,"entries":{}}}}}},"node_modules":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":true,"entries":{}}}},"autocomplete-paths":{"isExpanded":false,"entries":{}},"autocomplete-plus":{"isExpanded":false,"entries":{}},"autocomplete-ruby":{"isExpanded":true,"entries":{"lib":{"isExpanded":true,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}}}},"autocomplete-snippets":{"isExpanded":false,"entries":{}},"delorean":{"isExpanded":false,"entries":{}},"editor-stats":{"isExpanded":false,"entries":{}},"git-control":{"isExpanded":false,"entries":{}},"language-elixir":{"isExpanded":false,"entries":{}},"language-erlang":{"isExpanded":false,"entries":{}},"layout-manager":{"isExpanded":false,"entries":{}},"linter":{"isExpanded":false,"entries":{}},"linter-elixirc":{"isExpanded":false,"entries":{}},"linter-erlc":{"isExpanded":false,"entries":{}},"merge-conflicts":{"isExpanded":false,"entries":{}},"mocha-test-runner":{"isExpanded":false,"entries":{}},"term":{"isExpanded":false,"entries":{}}}},"storage":{"isExpanded":true,"entries":{}},"tm":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/iraasta/.atom/packages/autocomplete-erlang/lib/autocomplete-erlang.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":106,"width":302},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["ruby","findSuggestions:","findSuggestions","requestHandler"],"replaceHistory":["erlang"],"pathsHistory":["erlang"]},"keybinding-resolver":{}}}