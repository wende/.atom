{"mode":"editor","version":1,"windowDimensions":{"x":65,"y":24,"width":1301,"height":744,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/iraasta/Dropbox/WorldNote/world_note"],"buffers":[{"text":"defmodule WorldNote do\n  use Application\n\n  # See http://elixir-lang.org/docs/stable/elixir/Application.html\n  # for more information on OTP Applications\n  def start(_type, _args) do\n    import Supervisor.Spec, warn: false\n\n    children = [\n      # Start the endpoint when the application starts\n      supervisor(WorldNote.Endpoint, []),\n      # Start the Ecto repository\n      worker(WorldNote.Repo, []),\n      # Here you could define other workers and supervisors as children\n      # worker(WorldNote.Worker, [arg1, arg2, arg3]),\n    ]\n\n    # See http://elixir-lang.org/docs/stable/elixir/Supervisor.html\n    # for other strategies and supported options\n    opts = [strategy: :one_for_one, name: WorldNote.Supervisor]\n    Supervisor.start_link(children, opts)\n  end\n\n  # Tell Phoenix to update the endpoint configuration\n  # whenever the application is updated.\n  def config_change(changed, _new, removed) do\n    WorldNote.Endpoint.config_change(changed, removed)\n    :ok\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":5},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"39aab6765757e25080e986ce70304e57b3067e5d","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.Repo do\n  use Ecto.Repo, otp_app: :world_note\n\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":9},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note/repo.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"576178df17824ab2b465ad5046f661cc5b9477b1","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.Endpoint do\n  use Phoenix.Endpoint, otp_app: :world_note\n\n  # Serve at \"/\" the static files from \"priv/static\" directory.\n  #\n  # You should set gzip to true if you are running phoenix.digest\n  # when deploying your static files in production.\n  plug Plug.Static,\n    at: \"/\", from: :world_note, gzip: false,\n    only: ~w(css images js favicon.ico robots.txt)\n\n  # Code reloading can be explicitly enabled under the\n  # :code_reloader configuration of your endpoint.\n  if code_reloading? do\n    plug Phoenix.LiveReloader\n    plug Phoenix.CodeReloader\n  end\n\n  plug Plug.Logger\n\n  plug Plug.Parsers,\n    parsers: [:urlencoded, :multipart, :json],\n    pass: [\"*/*\"],\n    json_decoder: Poison\n\n  plug Plug.MethodOverride\n  plug Plug.Head\n\n  plug Plug.Session,\n    store: :cookie,\n    key: \"_world_note_key\",\n    signing_salt: \"SINmwWKL\"\n\n  plug :router, WorldNote.Router\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":13},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note/endpoint.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ab8f7ac3bd21b424e195a323ac06e4ad69c2d0c9","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.Router do\n  use WorldNote.Web, :router\n\n  pipeline :browser do\n    plug :accepts, [\"html\"]\n    plug :fetch_session\n    plug :fetch_flash\n    plug :protect_from_forgery\n  end\n\n  pipeline :api do\n    plug :accepts, [\"json\"]\n  end\n\n  scope \"/\", WorldNote do\n    pipe_through :browser # Use the default browser stack\n\n    get \"/\", PageController, :index\n  end\n\n  scope \"api\", WorldNote do\n    pipe_through :api\n\n    options \"/chats\", ChatsController, :options\n    resources \"/chats\", ChatsController\n  end\n\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":61},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/router.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"695fda841e90896b51142ea433991a0ee7af5c7e","deserializer":"TextBuffer","version":2},{"text":"","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":65},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":0,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/controllers/page_controller.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"da39a3ee5e6b4b0d3255bfef95601890afd80709","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ChatsController do\n  use WorldNote.Web, :controller\n  import Ecto.Query\n  alias WorldNote.Chats\n\n  plug :allow_origin\n  plug :scrub_params, \"chats\" when action in [:create, :update]\n  plug :action\n\n  defp allow_origin(conn, _opts) do\n    headers = get_req_header(conn, \"access-control-request-headers\") |> Enum.join(\", \")\n\n    conn\n    |> put_resp_header(\"access-control-allow-origin\", \"*\")\n    |> put_resp_header(\"access-control-allow-headers\", headers)\n    |> put_resp_header(\"access-control-allow-methods\", \"get, post, put, options\")\n    |> put_resp_header(\"access-control-max-age\", \"3600\")\n  end\n\n  def parse(string) do\n    {a, \"\"} = Float.parse(string)\n    a\n  end\n\n  def options(conn, _) do\n    conn\n  |> put_status(202)\n  |> text \"Ok\"\n  end\n\n  def index(conn, %{\"lat\" => lat, \"lng\" => lng}) do\n    # +-0.1 bounds of both\n    latH = parse(lat) + 0.01\n    latL = parse(lat) - 0.01\n    lngH = parse(lng) + 0.01\n    lngL = parse(lng) - 0.01\n\n    query = from w in Chats,\n            where: w.latitude   < ^latH and w.latitude  > ^latL\n              and  w.longitude  < ^lngH and w.longitude > ^lngL,\n            select: w\n    chats = Repo.all(query)\n    render(conn, \"index.json\", chats: chats)\n  end\n\n  def index(conn, _params) do\n    chats = Repo.all(Chats)\n    render(conn, \"index.json\", chats: chats)\n  end\n\n  def create(conn, %{\"chats\" => chats_params}) do\n    changeset = Chats.changeset(%Chats{}, chats_params)\n\n    if changeset.valid? do\n      chats = Repo.insert(changeset)\n      render(conn, \"show.json\", chats: chats)\n    else\n      conn\n      |> put_status(:unprocessable_entity)\n      |> render(WorldNote.ChangesetView, \"error.json\", changeset: changeset)\n    end\n  end\n\n  def show(conn, %{\"id\" => id}) do\n    chats = Repo.get(Chats, id)\n    render conn, \"show.json\", chats: chats\n  end\n\n  def update(conn, %{\"id\" => id, \"chats\" => chats_params}) do\n    chats = Repo.get(Chats, id)\n    changeset = Chats.changeset(chats, chats_params)\n\n    if changeset.valid? do\n      chats = Repo.update(changeset)\n      render(conn, \"show.json\", chats: chats)\n    else\n      conn\n      |> put_status(:unprocessable_entity)\n      |> render(WorldNote.ChangesetView, \"error.json\", changeset: changeset)\n    end\n  end\n\n  def delete(conn, %{\"id\" => id}) do\n    chats = Repo.get(Chats, id)\n\n    chats = Repo.delete(chats)\n    render(conn, \"show.json\", chats: chats)\n  end\nend\n","markerStore":{"nextMarkerId":5,"markersById":{"0":{"range":{"start":{"row":9,"column":0},"end":{"row":10,"column":0}},"properties":{"type":"selection","editorId":75,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":1,"column":0},"end":{"row":1,"column":32}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true},"2":{"range":{"start":{"row":1,"column":0},"end":{"row":1,"column":32}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/controllers/chats_controller.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"4d5e4f3919dd5dbbab08ac3f6e2a32b87286c994","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.Chats do\n  use WorldNote.Web, :model\n\n  schema \"chats\" do\n    field :fbid, :integer\n    field :latitude, :float\n    field :longitude, :float\n    field :content, :string\n    field :fullname, :string\n\n    timestamps\n  end\n\n  @required_fields ~w(fbid latitude longitude content fullname)\n  @optional_fields ~w()\n\n  @doc \"\"\"\n  Creates a changeset based on the `model` and `params`.\n\n  If `params` are nil, an invalid changeset is returned\n  with no validation performed.\n  \"\"\"\n  def changeset(model, params \\\\ :empty) do\n    model\n    |> cast(params, @required_fields, @optional_fields)\n  end\nend\n","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":79},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/models/chats.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"19ac4b390ebe39afa20a803839a5e3d9e9fa5cbd","deserializer":"TextBuffer","version":2},{"text":"<%= form_for @changeset, @action, fn f -> %>\n  <%= if f.errors != [] do %>\n    <div class=\"alert alert-danger\">\n      <p>Oops, something went wrong! Please check the errors below:</p>\n      <ul>\n        <%= for {attr, message} <- f.errors do %>\n          <li><%= humanize(attr) %> <%= message %></li>\n        <% end %>\n      </ul>\n    </div>\n  <% end %>\n\n  <div class=\"form-group\">\n    <label>Fbid</label>\n    <%= number_input f, :fbid, class: \"form-control\" %>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Latitude</label>\n    <%= number_input f, :latitude, step: \"any\", class: \"form-control\" %>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Longitude</label>\n    <%= number_input f, :longitude, step: \"any\", class: \"form-control\" %>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Content</label>\n    <%= text_input f, :content, class: \"form-control\" %>\n  </div>\n\n  <div class=\"form-group\">\n    <%= submit \"Submit\", class: \"btn btn-primary\" %>\n  </div>\n<% end %>\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":83},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/form.html.eex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"891c731091093d3c9a3bdf1b20125cb16e008006","deserializer":"TextBuffer","version":2},{"text":"<h2>Edit chats</h2>\n\n<%= render \"form.html\", changeset: @changeset,\n                        action: chats_path(@conn, :update, @chats) %>\n\n<%= link \"Back\", to: chats_path(@conn, :index) %>","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":87},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":0,"column":1},"end":{"row":0,"column":3}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2":{"range":{"start":{"row":0,"column":16},"end":{"row":0,"column":18}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/edit.html.eex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9f08c83f57ea3e831997e0fdf300a5eef2d64852","deserializer":"TextBuffer","version":2},{"text":"<h2>Listing chats</h2>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Fbid</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Content</th>\n\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n<%= for chats <- @chats do %>\n    <tr>\n      <td><%= chats.fbid %></td>\n      <td><%= chats.latitude %></td>\n      <td><%= chats.longitude %></td>\n      <td><%= chats.content %></td>\n\n      <td class=\"text-right\">\n        <%= link \"Show\", to: chats_path(@conn, :show, chats), class: \"btn btn-default btn-xs\" %>\n        <%= link \"Edit\", to: chats_path(@conn, :edit, chats), class: \"btn btn-default btn-xs\" %>\n        <%= link \"Delete\", to: chats_path(@conn, :delete, chats), method: :delete, class: \"btn btn-danger btn-xs\" %>\n      </td>\n    </tr>\n<% end %>\n  </tbody>\n</table>\n\n<%= link \"New chats\", to: chats_path(@conn, :new) %>\n","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":91},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":0,"column":1},"end":{"row":0,"column":3}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2":{"range":{"start":{"row":0,"column":19},"end":{"row":0,"column":21}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/index.html.eex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"dc1abf53a780fdb7787a54c46375c0e8ffd1cd2a","deserializer":"TextBuffer","version":2},{"text":"<h2>New chats</h2>\n\n<%= render \"form.html\", changeset: @changeset,\n                        action: chats_path(@conn, :create) %>\n\n<%= link \"Back\", to: chats_path(@conn, :index) %>","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":95},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":0,"column":1},"end":{"row":0,"column":3}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2":{"range":{"start":{"row":0,"column":15},"end":{"row":0,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/new.html.eex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f346f839e0eb16c29bf99184b9edb24f347032fc","deserializer":"TextBuffer","version":2},{"text":"<h2>Show chats</h2>\n\n<ul>\n\n  <li>\n    <strong>Fbid:</strong>\n    <%= @chats.fbid %>\n  </li>\n\n  <li>\n    <strong>Latitude:</strong>\n    <%= @chats.latitude %>\n  </li>\n\n  <li>\n    <strong>Longitude:</strong>\n    <%= @chats.longitude %>\n  </li>\n\n  <li>\n    <strong>Content:</strong>\n    <%= @chats.content %>\n  </li>\n\n</ul>\n\n<%= link \"Back\", to: chats_path(@conn, :index) %>","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":99},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":0,"column":1},"end":{"row":0,"column":3}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2":{"range":{"start":{"row":0,"column":16},"end":{"row":0,"column":18}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/show.html.eex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"26636d4ffc7d29b11f84cbadb07a2a1b0e7d197a","deserializer":"TextBuffer","version":2},{"text":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"author\" content=\"\">\n\n    <title>Hello Phoenix!</title>\n    <link rel=\"stylesheet\" href=\"<%= static_path(@conn, \"/css/app.css\") %>\">\n  </head>\n\n  <body>\n    <div class=\"container\" role=\"main\">\n      <div class=\"header\">\n        <ul class=\"nav nav-pills pull-right\">\n          <li><a href=\"http://www.phoenixframework.org/docs\">Get Started</a></li>\n        </ul>\n        <span class=\"logo\"></span>\n      </div>\n\n      <p class=\"alert alert-info\" role=\"alert\"><%= get_flash(@conn, :info) %></p>\n      <p class=\"alert alert-danger\" role=\"alert\"><%= get_flash(@conn, :error) %></p>\n\n      <%= @inner %>\n\n    </div> <!-- /container -->\n    <script src=\"<%= static_path(@conn, \"/js/app.js\") %>\"></script>\n    <script>require(\"web/static/js/app\")</script>\n  </body>\n</html>\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":103},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/layout/application.html.eex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"87e37a8b67b1cb230028c8f68b78df291ed08e15","deserializer":"TextBuffer","version":2},{"text":"<div class=\"jumbotron\">\n  <h2>Welcome to Phoenix!</h2>\n  <p class=\"lead\">Most frameworks make you choose between speed and a productive environment. <a href=\"http://phoenixframework.org\">Phoenix</a> and <a href=\"http://elixir-lang.org\">Elixir</a> give you both.</p>\n</div>\n\n<div class=\"row marketing\">\n  <div class=\"col-lg-6\">\n    <h4>Resources</h4>\n    <ul>\n      <li>\n        <a href=\"http://phoenixframework.org/docs/overview\">Guides</a>\n      </li>\n      <li>\n        <a href=\"http://hexdocs.pm/phoenix\">Docs</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/phoenixframework/phoenix\">Source</a>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"col-lg-6\">\n    <h4>Help</h4>\n    <ul>\n      <li>\n        <a href=\"http://groups.google.com/group/phoenix-talk\">Mailing list</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/phoenixframework/phoenix/issues?state=open\">Issues</a>\n      </li>\n      <li>\n        <a href=\"irc://irc.freenode.net/elixir-lang\">#elixir-lang on freenode IRC</a>\n      </li>\n      <li>\n        <a href=\"https://twitter.com/elixirphoenix\">@elixirphoenix</a>\n      </li>\n    </ul>\n  </div>\n</div>\n\n","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":107},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":{"start":{"row":0,"column":1},"end":{"row":0,"column":4}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2":{"range":{"start":{"row":3,"column":2},"end":{"row":3,"column":5}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/page/index.html.eex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"5c21ae8c6d6f60dd5174f4e6d254abb765ded871","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ChatsView do\n  use WorldNote.Web, :view\n\n  def render(\"index.json\", %{chats: chats}) do\n    %{data: render_many(chats, \"chats.json\")}\n  end\n\n  def render(\"show.json\", %{chats: chats}) do\n    %{data: render_one(chats, \"chats.json\")}\n  end\n\n  def render(\"chats.json\", %{chats: chats}) do\n    %{chats: chats}\n  end\nend\n","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":111},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/views/chats_view.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"23ad8afa9586b86f5a17f8cd36b0d818183522a3","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ChangesetView do\n  use WorldNote.Web, :view\n\n  def render(\"error.json\", %{changeset: changeset}) do\n    # When encoded, the changeset returns its errors\n    # as a JSON object. So we just pass it forward.\n    %{errors: changeset}\n  end\nend\n","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":115},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/views/changeset_view.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"158e64c9cb151625c9e91345b071f13c49392c27","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ErrorView do\n  def render(\"404.html\",_) do\n    \"Page not found\"\n  end\n  def render(_,_) do\n    \"Server internal error\"\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":119},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/views/error_view.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0750acbb33420d90bc952f3ef30c43c02a14146a","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.Web do\n  @moduledoc \"\"\"\n  A module that keeps using definitions for controllers,\n  views and so on.\n\n  This can be used in your application as:\n\n      use WorldNote.Web, :controller\n      use WorldNote.Web, :view\n\n  The definitions below will be executed for every view,\n  controller, etc, so keep them short and clean, focused\n  on imports, uses and aliases.\n\n  Do NOT define functions inside the quoted expressions\n  below.\n  \"\"\"\n\n  def model do\n    quote do\n      use Ecto.Model\n    end\n  end\n\n  def controller do\n    quote do\n      use Phoenix.Controller\n\n      # Alias the data repository and import query/model functions\n      alias WorldNote.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 2]\n\n      # Import URL helpers from the router\n      import WorldNote.Router.Helpers\n    end\n  end\n\n  def view do\n    quote do\n      use Phoenix.View, root: \"web/templates\"\n\n      # Import convenience functions from controllers\n      import Phoenix.Controller, only: [get_csrf_token: 0, get_flash: 2, view_module: 1]\n\n      # Import URL helpers from the router\n      import WorldNote.Router.Helpers\n\n      # Use all HTML functionality (forms, tags, etc)\n      use Phoenix.HTML\n    end\n  end\n\n  def router do\n    quote do\n      use Phoenix.Router\n    end\n  end\n\n  def channel do\n    quote do\n      use Phoenix.Channel\n\n      # Alias the data repository and import query/model functions\n      alias WorldNote.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 2]\n\n    end\n  end\n\n  @doc \"\"\"\n  When used, dispatch to the appropriate controller/view/etc.\n  \"\"\"\n  defmacro __using__(which) when is_atom(which) do\n    apply(__MODULE__, which, [])\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":123},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/web/web.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"682b88c7f947602fd50c4901e5ca702662aaefc2","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.Mixfile do\n  use Mix.Project\n\n  def project do\n    [app: :world_note,\n     version: \"0.0.1\",\n     elixir: \"~> 1.0\",\n     elixirc_paths: elixirc_paths(Mix.env),\n     compilers: [:phoenix] ++ Mix.compilers,\n     build_embedded: Mix.env == :prod,\n     start_permanent: Mix.env == :prod,\n     deps: deps]\n  end\n\n  # Configuration for the OTP application\n  #\n  # Type `mix help compile.app` for more information\n  def application do\n    [mod: {WorldNote, []},\n     applications: [:phoenix, :phoenix_html, :cowboy, :logger,\n                    :phoenix_ecto, :postgrex]]\n  end\n\n  # Specifies which paths to compile per environment\n  defp elixirc_paths(:test), do: [\"lib\", \"web\", \"test/support\"]\n  defp elixirc_paths(_),     do: [\"lib\", \"web\"]\n\n  # Specifies your project dependencies\n  #\n  # Type `mix help deps` for examples and options\n  defp deps do\n    [{:phoenix, \"~> 0.13.1\"},\n     {:phoenix_ecto, \"~> 0.4\"},\n     {:postgrex, \">= 0.0.0\"},\n     {:phoenix_html, \"~> 1.0\"},\n     {:phoenix_live_reload, \"~> 0.4\", only: :dev},\n     {:cowboy, \"~> 1.0\"}]\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":127},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/mix.exs","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ddfb4ccb7039a6784b1c1e9f8ab33e441c6054a0","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ChatsControllerTest do\n  use WorldNote.ConnCase\n\n  alias WorldNote.Chats\n  @valid_attrs %{content: \"some content\", fbid: 42, latitude: \"120.5\", longitude: \"120.5\"}\n  @invalid_attrs %{}\n\n  setup do\n    conn = conn() |> put_req_header(\"accept\", \"application/json\")\n    {:ok, conn: conn}\n  end\n\n  test \"lists all entries on index\", %{conn: conn} do\n    conn = get conn, chats_path(conn, :index)\n    assert json_response(conn, 200)[\"data\"] == []\n  end\n\n  test \"shows chosen resource\", %{conn: conn} do\n    chats = Repo.insert %Chats{}\n    conn = get conn, chats_path(conn, :show, chats)\n    assert json_response(conn, 200)[\"data\"] == %{\n      \"id\" => chats.id\n    }\n  end\n\n  test \"creates and renders resource when data is valid\", %{conn: conn} do\n    conn = post conn, chats_path(conn, :create), chats: @valid_attrs\n    assert json_response(conn, 200)[\"data\"][\"id\"]\n    assert Repo.get_by(Chats, @valid_attrs)\n  end\n\n  test \"does not create resource and renders errors when data is invalid\", %{conn: conn} do\n    conn = post conn, chats_path(conn, :create), chats: @invalid_attrs\n    assert json_response(conn, 422)[\"errors\"] != %{}\n  end\n\n  test \"updates and renders chosen resource when data is valid\", %{conn: conn} do\n    chats = Repo.insert %Chats{}\n    conn = put conn, chats_path(conn, :update, chats), chats: @valid_attrs\n    assert json_response(conn, 200)[\"data\"][\"id\"]\n    assert Repo.get_by(Chats, @valid_attrs)\n  end\n\n  test \"does not update chosen resource and renders errors when data is invalid\", %{conn: conn} do\n    chats = Repo.insert %Chats{}\n    conn = put conn, chats_path(conn, :update, chats), chats: @invalid_attrs\n    assert json_response(conn, 422)[\"errors\"] != %{}\n  end\n\n  test \"deletes chosen resource\", %{conn: conn} do\n    chats = Repo.insert %Chats{}\n    conn = delete conn, chats_path(conn, :delete, chats)\n    assert json_response(conn, 200)[\"data\"][\"id\"]\n    refute Repo.get(Chats, chats.id)\n  end\nend\n","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":131},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/test/controllers/chats_controller_test.exs","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c946db3a91c07b15ac92bb40b6fd07ead1680f10","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ChatsTest do\n  use WorldNote.ModelCase\n\n  alias WorldNote.Chats\n\n  @valid_attrs %{content: \"some content\", fbid: 42, latitude: \"120.5\", longitude: \"120.5\"}\n  @invalid_attrs %{}\n\n  test \"changeset with valid attributes\" do\n    changeset = Chats.changeset(%Chats{}, @valid_attrs)\n    assert changeset.valid?\n  end\n\n  test \"changeset with invalid attributes\" do\n    changeset = Chats.changeset(%Chats{}, @invalid_attrs)\n    refute changeset.valid?\n  end\nend\n","markerStore":{"nextMarkerId":3,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":135},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/test/models/chats_test.exs","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"315955dbbd2c1dffb6240f8802a0779016fb55b9","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ChannelCase do\n  @moduledoc \"\"\"\n  This module defines the test case to be used by\n  channel tests.\n\n  Such tests rely on `Phoenix.ChannelTest` and also\n  imports other functionality to make it easier\n  to build and query models.\n\n  Finally, if the test case interacts with the database,\n  it cannot be async. For this reason, every test runs\n  inside a transaction which is reset at the beginning\n  of the test unless the test case is marked as async.\n  \"\"\"\n\n  use ExUnit.CaseTemplate\n\n  using do\n    quote do\n      # Import conveniences for testing with channels\n      use Phoenix.ChannelTest\n\n      # Alias the data repository and import query/model functions\n      alias WorldNote.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 2]\n\n\n      # The default endpoint for testing\n      @endpoint WorldNote.Endpoint\n    end\n  end\n\n  setup tags do\n    unless tags[:async] do\n      Ecto.Adapters.SQL.restart_test_transaction(WorldNote.Repo, [])\n    end\n\n    :ok\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":139},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/test/support/channel_case.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0a83fb098344f380241da9ee4b492413b4597648","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ConnCase do\n  @moduledoc \"\"\"\n  This module defines the test case to be used by\n  tests that require setting up a connection.\n\n  Such tests rely on `Phoenix.ConnTest` and also\n  imports other functionality to make it easier\n  to build and query models.\n\n  Finally, if the test case interacts with the database,\n  it cannot be async. For this reason, every test runs\n  inside a transaction which is reset at the beginning\n  of the test unless the test case is marked as async.\n  \"\"\"\n\n  use ExUnit.CaseTemplate\n\n  using do\n    quote do\n      # Import conveniences for testing with connections\n      use Phoenix.ConnTest\n\n      # Alias the data repository and import query/model functions\n      alias WorldNote.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 2]\n\n      # Import URL helpers from the router\n      import WorldNote.Router.Helpers\n\n      # The default endpoint for testing\n      @endpoint WorldNote.Endpoint\n    end\n  end\n\n  setup tags do\n    unless tags[:async] do\n      Ecto.Adapters.SQL.restart_test_transaction(WorldNote.Repo, [])\n    end\n\n    :ok\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":143},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/test/support/conn_case.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"2b691332aa9f3b4076086d99520388ff73acb4b3","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ModelCase do\n  @moduledoc \"\"\"\n  This module defines the test case to be used by\n  model tests.\n\n  You may define functions here to be used as helpers in\n  your model tests. See `errors_on/2`'s definition as reference.\n\n  Finally, if the test case interacts with the database,\n  it cannot be async. For this reason, every test runs\n  inside a transaction which is reset at the beginning\n  of the test unless the test case is marked as async.\n  \"\"\"\n\n  use ExUnit.CaseTemplate\n\n  using do\n    quote do\n      # Alias the data repository and import query/model functions\n      alias WorldNote.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 2]\n      import WorldNote.ModelCase\n    end\n  end\n\n  setup tags do\n    unless tags[:async] do\n      Ecto.Adapters.SQL.restart_test_transaction(WorldNote.Repo, [])\n    end\n\n    :ok\n  end\n\n  @doc \"\"\"\n  Helper for returning list of errors in model when passed certain data.\n\n  ## Examples\n\n  Given a User model that has validation for the presence of a value for the\n  `:name` field and validation that `:password` is \"safe\":\n\n      iex> errors_on(%User{}, password: \"password\")\n      [{:password, \"is unsafe\"}, {:name, \"is blank\"}]\n\n  You would then write your assertion like:\n\n      assert {:password, \"is unsafe\"} in errors_on(%User{}, password: \"password\")\n  \"\"\"\n  def errors_on(model, data) do\n    model.__struct__.changeset(model, data).errors\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":147},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/test/support/model_case.ex","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"aef37d3bb616d0a8d964d8dac6b007a905065ed7","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.ErrorViewTest do\n  use WorldNote.ConnCase, async: true\n\n  # Bring render/3 and render_to_string/3 for testing custom views\n  import Phoenix.View\n\n  test \"renders 404.html\" do\n    assert render_to_string(WorldNote.ErrorView, \"404.html\", []) ==\n           \"Page not found\"\n  end\n\n  test \"render 500.html\" do\n    assert render_to_string(WorldNote.ErrorView, \"500.html\", []) ==\n           \"Server internal error\"\n  end\n\n  test \"render any other\" do\n    assert render_to_string(WorldNote.ErrorView, \"505.html\", []) ==\n           \"Server internal error\"\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":151},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/test/views/error_view_test.exs","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7543a6a224dc815cf4055b6a42d8ea8a8d5ff85e","deserializer":"TextBuffer","version":2},{"text":"defmodule WorldNote.PageViewTest do\n  use WorldNote.ConnCase, async: true\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":155},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/test/views/page_view_test.exs","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"92ab9a14e32f425a1774f159bc6257547aba7fb2","deserializer":"TextBuffer","version":2},{"text":"ExUnit.start\n\n# Create the database, run migrations, and start the test transaction.\nMix.Task.run \"ecto.create\", [\"--quiet\"]\nMix.Task.run \"ecto.migrate\", [\"--quiet\"]\nEcto.Adapters.SQL.begin_test_transaction(WorldNote.Repo)\n","markerStore":{"nextMarkerId":2,"markersById":{"0":{"range":{"start":{"row":6,"column":0},"end":{"row":6,"column":0}},"properties":{"type":"selection","editorId":159,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":2,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/home/iraasta/Dropbox/WorldNote/world_note/test/test_helper.exs","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"8d9f14009d7e14554bbbed6a510e9d45828cee46","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":5,"softTabs":true,"displayBuffer":{"id":6,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note.ex","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":9,"softTabs":true,"displayBuffer":{"id":10,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note/repo.ex","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":13,"softTabs":true,"displayBuffer":{"id":14,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note/endpoint.ex","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":61,"softTabs":true,"displayBuffer":{"id":62,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/router.ex","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":123,"softTabs":true,"displayBuffer":{"id":124,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/web.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":127,"softTabs":true,"displayBuffer":{"id":128,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/mix.exs","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":131,"softTabs":true,"displayBuffer":{"id":132,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/test/controllers/chats_controller_test.exs","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":135,"softTabs":true,"displayBuffer":{"id":136,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/test/models/chats_test.exs","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":139,"softTabs":true,"displayBuffer":{"id":140,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/test/support/channel_case.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":143,"softTabs":true,"displayBuffer":{"id":144,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/test/support/conn_case.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":147,"softTabs":true,"displayBuffer":{"id":148,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/test/support/model_case.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":151,"softTabs":true,"displayBuffer":{"id":152,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/test/views/error_view_test.exs","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":155,"softTabs":true,"displayBuffer":{"id":156,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/test/views/page_view_test.exs","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":159,"softTabs":true,"displayBuffer":{"id":160,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/test/test_helper.exs","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":65,"softTabs":true,"displayBuffer":{"id":66,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/controllers/page_controller.ex","deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":75,"softTabs":true,"displayBuffer":{"id":76,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/controllers/chats_controller.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":79,"softTabs":true,"displayBuffer":{"id":80,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/models/chats.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":83,"softTabs":true,"displayBuffer":{"id":84,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/form.html.eex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":87,"softTabs":true,"displayBuffer":{"id":88,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/edit.html.eex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":91,"softTabs":true,"displayBuffer":{"id":92,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/index.html.eex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":95,"softTabs":true,"displayBuffer":{"id":96,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/new.html.eex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":99,"softTabs":true,"displayBuffer":{"id":100,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/show.html.eex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":103,"softTabs":true,"displayBuffer":{"id":104,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/layout/application.html.eex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":107,"softTabs":true,"displayBuffer":{"id":108,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/page/index.html.eex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":111,"softTabs":true,"displayBuffer":{"id":112,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/views/chats_view.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":119,"softTabs":true,"displayBuffer":{"id":120,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/views/error_view.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":115,"softTabs":true,"displayBuffer":{"id":116,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/views/changeset_view.ex","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/home/iraasta/Dropbox/WorldNote/world_note/web/controllers/chats_controller.ex","focused":false,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-elixir","language-html","language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note.ex":1435533467724,"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note/repo.ex":1435533467232,"/home/iraasta/Dropbox/WorldNote/world_note/lib/world_note/endpoint.ex":1435533471605,"/home/iraasta/Dropbox/WorldNote/world_note/web/router.ex":1435533469414,"/home/iraasta/Dropbox/WorldNote/world_note/web/web.ex":1435533470134,"/home/iraasta/Dropbox/WorldNote/world_note/mix.exs":1435533472710,"/home/iraasta/Dropbox/WorldNote/world_note/test/controllers/chats_controller_test.exs":1435533457815,"/home/iraasta/Dropbox/WorldNote/world_note/test/models/chats_test.exs":1435533459400,"/home/iraasta/Dropbox/WorldNote/world_note/test/support/channel_case.ex":1435533460663,"/home/iraasta/Dropbox/WorldNote/world_note/test/support/conn_case.ex":1435533461170,"/home/iraasta/Dropbox/WorldNote/world_note/test/support/model_case.ex":1435533461672,"/home/iraasta/Dropbox/WorldNote/world_note/test/views/error_view_test.exs":1435533462938,"/home/iraasta/Dropbox/WorldNote/world_note/test/views/page_view_test.exs":1435533463450,"/home/iraasta/Dropbox/WorldNote/world_note/test/test_helper.exs":1435533464101,"/home/iraasta/Dropbox/WorldNote/world_note/web/controllers/page_controller.ex":1435533398024,"/home/iraasta/Dropbox/WorldNote/world_note/web/controllers/chats_controller.ex":1435533474067,"/home/iraasta/Dropbox/WorldNote/world_note/web/models/chats.ex":1435533429327,"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/form.html.eex":1435533434913,"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/edit.html.eex":1435533435664,"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/index.html.eex":1435533436224,"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/new.html.eex":1435533436881,"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/chats/show.html.eex":1435533437359,"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/layout/application.html.eex":1435533440267,"/home/iraasta/Dropbox/WorldNote/world_note/web/templates/page/index.html.eex":1435533441204,"/home/iraasta/Dropbox/WorldNote/world_note/web/views/chats_view.ex":1435533444761,"/home/iraasta/Dropbox/WorldNote/world_note/web/views/error_view.ex":1435533445300,"/home/iraasta/Dropbox/WorldNote/world_note/web/views/changeset_view.ex":1435533443906},"metrics":{"sessionLength":773505},"tree-view":{"directoryExpansionStates":{"/home/iraasta/Dropbox/WorldNote/world_note":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"_build":{"isExpanded":false,"entries":{}},"config":{"isExpanded":false,"entries":{}},"deps":{"isExpanded":false,"entries":{}},"lib":{"isExpanded":false,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}},"priv":{"isExpanded":false,"entries":{}},"test":{"isExpanded":false,"entries":{}},"web":{"isExpanded":true,"entries":{"channels":{"isExpanded":false,"entries":{}},"controllers":{"isExpanded":true,"entries":{}},"models":{"isExpanded":true,"entries":{}},"static":{"isExpanded":false,"entries":{}},"templates":{"isExpanded":true,"entries":{"chats":{"isExpanded":true,"entries":{}},"layout":{"isExpanded":true,"entries":{}},"page":{"isExpanded":true,"entries":{}}}},"views":{"isExpanded":true,"entries":{}}}}}}},"selectedPath":"/home/iraasta/Dropbox/WorldNote/world_note/web/controllers/chats_controller.ex","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"tabs":[{}]}}