{"mode":"editor","version":1,"windowDimensions":{"x":65,"y":24,"width":1301,"height":744,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/etc/php5/apache2"],"buffers":[{"text":"[PHP]\n\n;;;;;;;;;;;;;;;;;;;\n; About php.ini   ;\n;;;;;;;;;;;;;;;;;;;\n; PHP's initialization file, generally called php.ini, is responsible for\n; configuring many of the aspects of PHP's behavior.\n\n; PHP attempts to find and load this configuration from a number of locations.\n; The following is a summary of its search order:\n; 1. SAPI module specific location.\n; 2. The PHPRC environment variable. (As of PHP 5.2.0)\n; 3. A number of predefined registry keys on Windows (As of PHP 5.2.0)\n; 4. Current working directory (except CLI)\n; 5. The web server's directory (for SAPI modules), or directory of PHP\n; (otherwise in Windows)\n; 6. The directory from the --with-config-file-path compile time option, or the\n; Windows directory (C:\\windows or C:\\winnt)\n; See the PHP docs for more specific information.\n; http://php.net/configuration.file\n\n; The syntax of the file is extremely simple.  Whitespace and lines\n; beginning with a semicolon are silently ignored (as you probably guessed).\n; Section headers (e.g. [Foo]) are also silently ignored, even though\n; they might mean something in the future.\n\n; Directives following the section heading [PATH=/www/mysite] only\n; apply to PHP files in the /www/mysite directory.  Directives\n; following the section heading [HOST=www.example.com] only apply to\n; PHP files served from www.example.com.  Directives set in these\n; special sections cannot be overridden by user-defined INI files or\n; at runtime. Currently, [PATH=] and [HOST=] sections only work under\n; CGI/FastCGI.\n; http://php.net/ini.sections\n\n; Directives are specified using the following syntax:\n; directive = value\n; Directive names are *case sensitive* - foo=bar is different from FOO=bar.\n; Directives are variables used to configure PHP or PHP extensions.\n; There is no name validation.  If PHP can't find an expected\n; directive because it is not set or is mistyped, a default value will be used.\n\n; The value can be a string, a number, a PHP constant (e.g. E_ALL or M_PI), one\n; of the INI constants (On, Off, True, False, Yes, No and None) or an expression\n; (e.g. E_ALL & ~E_NOTICE), a quoted string (\"bar\"), or a reference to a\n; previously set variable or directive (e.g. ${foo})\n\n; Expressions in the INI file are limited to bitwise operators and parentheses:\n; |  bitwise OR\n; ^  bitwise XOR\n; &  bitwise AND\n; ~  bitwise NOT\n; !  boolean NOT\n\n; Boolean flags can be turned on using the values 1, On, True or Yes.\n; They can be turned off using the values 0, Off, False or No.\n\n; An empty string can be denoted by simply not writing anything after the equal\n; sign, or by using the None keyword:\n\n;  foo =         ; sets foo to an empty string\n;  foo = None    ; sets foo to an empty string\n;  foo = \"None\"  ; sets foo to the string 'None'\n\n; If you use constants in your value, and these constants belong to a\n; dynamically loaded extension (either a PHP extension or a Zend extension),\n; you may only use these constants *after* the line that loads the extension.\n\n;;;;;;;;;;;;;;;;;;;\n; About this file ;\n;;;;;;;;;;;;;;;;;;;\n; PHP comes packaged with two INI files. One that is recommended to be used\n; in production environments and one that is recommended to be used in\n; development environments.\n\n; php.ini-production contains settings which hold security, performance and\n; best practices at its core. But please be aware, these settings may break\n; compatibility with older or less security conscience applications. We\n; recommending using the production ini in production and testing environments.\n\n; php.ini-development is very similar to its production variant, except it's\n; much more verbose when it comes to errors. We recommending using the\n; development version only in development environments as errors shown to\n; application users can inadvertently leak otherwise secure information.\n\n; This is php.ini-production INI file.\n\n;;;;;;;;;;;;;;;;;;;\n; Quick Reference ;\n;;;;;;;;;;;;;;;;;;;\n; The following are all the settings which are different in either the production\n; or development versions of the INIs with respect to PHP's default behavior.\n; Please see the actual settings later in the document for more details as to why\n; we recommend these changes in PHP's behavior.\n\n; display_errors\n;   Default Value: On\n;   Development Value: On\n;   Production Value: Off\n\n; display_startup_errors\n;   Default Value: Off\n;   Development Value: On\n;   Production Value: Off\n\n; error_reporting\n;   Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED\n;   Development Value: E_ALL\n;   Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT\n\n; html_errors\n;   Default Value: On\n;   Development Value: On\n;   Production value: On\n\n; log_errors\n;   Default Value: Off\n;   Development Value: On\n;   Production Value: On\n\n; max_input_time\n;   Default Value: -1 (Unlimited)\n;   Development Value: 60 (60 seconds)\n;   Production Value: 60 (60 seconds)\n\n; output_buffering\n;   Default Value: Off\n;   Development Value: 4096\n;   Production Value: 4096\n\n; register_argc_argv\n;   Default Value: On\n;   Development Value: Off\n;   Production Value: Off\n\n; request_order\n;   Default Value: None\n;   Development Value: \"GP\"\n;   Production Value: \"GP\"\n\n; session.bug_compat_42\n;   Default Value: On\n;   Development Value: On\n;   Production Value: Off\n\n; session.bug_compat_warn\n;   Default Value: On\n;   Development Value: On\n;   Production Value: Off\n\n; session.gc_divisor\n;   Default Value: 100\n;   Development Value: 1000\n;   Production Value: 1000\n\n; session.hash_bits_per_character\n;   Default Value: 4\n;   Development Value: 5\n;   Production Value: 5\n\n; short_open_tag\n;   Default Value: On\n;   Development Value: Off\n;   Production Value: Off\n\n; track_errors\n;   Default Value: Off\n;   Development Value: On\n;   Production Value: Off\n\n; url_rewriter.tags\n;   Default Value: \"a=href,area=href,frame=src,form=,fieldset=\"\n;   Development Value: \"a=href,area=href,frame=src,input=src,form=fakeentry\"\n;   Production Value: \"a=href,area=href,frame=src,input=src,form=fakeentry\"\n\n; variables_order\n;   Default Value: \"EGPCS\"\n;   Development Value: \"GPCS\"\n;   Production Value: \"GPCS\"\n\n;;;;;;;;;;;;;;;;;;;;\n; php.ini Options  ;\n;;;;;;;;;;;;;;;;;;;;\n; Name for user-defined php.ini (.htaccess) files. Default is \".user.ini\"\n;user_ini.filename = \".user.ini\"\n\n; To disable this feature set this option to empty value\n;user_ini.filename =\n\n; TTL for user-defined php.ini files (time-to-live) in seconds. Default is 300 seconds (5 minutes)\n;user_ini.cache_ttl = 300\n\n;;;;;;;;;;;;;;;;;;;;\n; Language Options ;\n;;;;;;;;;;;;;;;;;;;;\n\n; Enable the PHP scripting language engine under Apache.\n; http://php.net/engine\nengine = On\n\n; This directive determines whether or not PHP will recognize code between\n; <? and ?> tags as PHP source which should be processed as such. It is\n; generally recommended that <?php and ?> should be used and that this feature\n; should be disabled, as enabling it may result in issues when generating XML\n; documents, however this remains supported for backward compatibility reasons.\n; Note that this directive does not control the <?= shorthand tag, which can be\n; used regardless of this directive.\n; Default Value: On\n; Development Value: Off\n; Production Value: Off\n; http://php.net/short-open-tag\nshort_open_tag = Off\n\n; Allow ASP-style <% %> tags.\n; http://php.net/asp-tags\nasp_tags = Off\n\n; The number of significant digits displayed in floating point numbers.\n; http://php.net/precision\nprecision = 14\n\n; Output buffering is a mechanism for controlling how much output data\n; (excluding headers and cookies) PHP should keep internally before pushing that\n; data to the client. If your application's output exceeds this setting, PHP\n; will send that data in chunks of roughly the size you specify.\n; Turning on this setting and managing its maximum buffer size can yield some\n; interesting side-effects depending on your application and web server.\n; You may be able to send headers and cookies after you've already sent output\n; through print or echo. You also may see performance benefits if your server is\n; emitting less packets due to buffered output versus PHP streaming the output\n; as it gets it. On production servers, 4096 bytes is a good setting for performance\n; reasons.\n; Note: Output buffering can also be controlled via Output Buffering Control\n;   functions.\n; Possible Values:\n;   On = Enabled and buffer is unlimited. (Use with caution)\n;   Off = Disabled\n;   Integer = Enables the buffer and sets its maximum size in bytes.\n; Note: This directive is hardcoded to Off for the CLI SAPI\n; Default Value: Off\n; Development Value: 4096\n; Production Value: 4096\n; http://php.net/output-buffering\noutput_buffering = 4096\n\n; You can redirect all of the output of your scripts to a function.  For\n; example, if you set output_handler to \"mb_output_handler\", character\n; encoding will be transparently converted to the specified encoding.\n; Setting any output handler automatically turns on output buffering.\n; Note: People who wrote portable scripts should not depend on this ini\n;   directive. Instead, explicitly set the output handler using ob_start().\n;   Using this ini directive may cause problems unless you know what script\n;   is doing.\n; Note: You cannot use both \"mb_output_handler\" with \"ob_iconv_handler\"\n;   and you cannot use both \"ob_gzhandler\" and \"zlib.output_compression\".\n; Note: output_handler must be empty if this is set 'On' !!!!\n;   Instead you must use zlib.output_handler.\n; http://php.net/output-handler\n;output_handler =\n\n; Transparent output compression using the zlib library\n; Valid values for this option are 'off', 'on', or a specific buffer size\n; to be used for compression (default is 4KB)\n; Note: Resulting chunk size may vary due to nature of compression. PHP\n;   outputs chunks that are few hundreds bytes each as a result of\n;   compression. If you prefer a larger chunk size for better\n;   performance, enable output_buffering in addition.\n; Note: You need to use zlib.output_handler instead of the standard\n;   output_handler, or otherwise the output will be corrupted.\n; http://php.net/zlib.output-compression\nzlib.output_compression = Off\n\n; http://php.net/zlib.output-compression-level\n;zlib.output_compression_level = -1\n\n; You cannot specify additional output handlers if zlib.output_compression\n; is activated here. This setting does the same as output_handler but in\n; a different order.\n; http://php.net/zlib.output-handler\n;zlib.output_handler =\n\n; Implicit flush tells PHP to tell the output layer to flush itself\n; automatically after every output block.  This is equivalent to calling the\n; PHP function flush() after each and every call to print() or echo() and each\n; and every HTML block.  Turning this option on has serious performance\n; implications and is generally recommended for debugging purposes only.\n; http://php.net/implicit-flush\n; Note: This directive is hardcoded to On for the CLI SAPI\nimplicit_flush = Off\n\n; The unserialize callback function will be called (with the undefined class'\n; name as parameter), if the unserializer finds an undefined class\n; which should be instantiated. A warning appears if the specified function is\n; not defined, or if the function doesn't include/implement the missing class.\n; So only set this entry, if you really want to implement such a\n; callback-function.\nunserialize_callback_func =\n\n; When floats & doubles are serialized store serialize_precision significant\n; digits after the floating point. The default value ensures that when floats\n; are decoded with unserialize, the data will remain the same.\nserialize_precision = 17\n\n; open_basedir, if set, limits all file operations to the defined directory\n; and below.  This directive makes most sense if used in a per-directory\n; or per-virtualhost web server configuration file. This directive is\n; *NOT* affected by whether Safe Mode is turned On or Off.\n; http://php.net/open-basedir\n;open_basedir =\n\n; This directive allows you to disable certain functions for security reasons.\n; It receives a comma-delimited list of function names. This directive is\n; *NOT* affected by whether Safe Mode is turned On or Off.\n; http://php.net/disable-functions\ndisable_functions = pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,\n\n; This directive allows you to disable certain classes for security reasons.\n; It receives a comma-delimited list of class names. This directive is\n; *NOT* affected by whether Safe Mode is turned On or Off.\n; http://php.net/disable-classes\ndisable_classes =\n\n; Colors for Syntax Highlighting mode.  Anything that's acceptable in\n; <span style=\"color: ???????\"> would work.\n; http://php.net/syntax-highlighting\n;highlight.string  = #DD0000\n;highlight.comment = #FF9900\n;highlight.keyword = #007700\n;highlight.default = #0000BB\n;highlight.html    = #000000\n\n; If enabled, the request will be allowed to complete even if the user aborts\n; the request. Consider enabling it if executing long requests, which may end up\n; being interrupted by the user or a browser timing out. PHP's default behavior\n; is to disable this feature.\n; http://php.net/ignore-user-abort\n;ignore_user_abort = On\n\n; Determines the size of the realpath cache to be used by PHP. This value should\n; be increased on systems where PHP opens many files to reflect the quantity of\n; the file operations performed.\n; http://php.net/realpath-cache-size\n;realpath_cache_size = 16k\n\n; Duration of time, in seconds for which to cache realpath information for a given\n; file or directory. For systems with rarely changing files, consider increasing this\n; value.\n; http://php.net/realpath-cache-ttl\n;realpath_cache_ttl = 120\n\n; Enables or disables the circular reference collector.\n; http://php.net/zend.enable-gc\nzend.enable_gc = On\n\n; If enabled, scripts may be written in encodings that are incompatible with\n; the scanner.  CP936, Big5, CP949 and Shift_JIS are the examples of such\n; encodings.  To use this feature, mbstring extension must be enabled.\n; Default: Off\n;zend.multibyte = Off\n\n; Allows to set the default encoding for the scripts.  This value will be used\n; unless \"declare(encoding=...)\" directive appears at the top of the script.\n; Only affects if zend.multibyte is set.\n; Default: \"\"\n;zend.script_encoding =\n\n;;;;;;;;;;;;;;;;;\n; Miscellaneous ;\n;;;;;;;;;;;;;;;;;\n\n; Decides whether PHP may expose the fact that it is installed on the server\n; (e.g. by adding its signature to the Web server header).  It is no security\n; threat in any way, but it makes it possible to determine whether you use PHP\n; on your server or not.\n; http://php.net/expose-php\nexpose_php = On\n\n;;;;;;;;;;;;;;;;;;;\n; Resource Limits ;\n;;;;;;;;;;;;;;;;;;;\n\n; Maximum execution time of each script, in seconds\n; http://php.net/max-execution-time\n; Note: This directive is hardcoded to 0 for the CLI SAPI\nmax_execution_time = 30\n\n; Maximum amount of time each script may spend parsing request data. It's a good\n; idea to limit this time on productions servers in order to eliminate unexpectedly\n; long running scripts.\n; Note: This directive is hardcoded to -1 for the CLI SAPI\n; Default Value: -1 (Unlimited)\n; Development Value: 60 (60 seconds)\n; Production Value: 60 (60 seconds)\n; http://php.net/max-input-time\nmax_input_time = 60\n\n; Maximum input variable nesting level\n; http://php.net/max-input-nesting-level\n;max_input_nesting_level = 64\n\n; How many GET/POST/COOKIE input variables may be accepted\n; max_input_vars = 1000\n\n; Maximum amount of memory a script may consume (128MB)\n; http://php.net/memory-limit\nmemory_limit = 128M\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n; Error handling and logging ;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n; This directive informs PHP of which errors, warnings and notices you would like\n; it to take action for. The recommended way of setting values for this\n; directive is through the use of the error level constants and bitwise\n; operators. The error level constants are below here for convenience as well as\n; some common settings and their meanings.\n; By default, PHP is set to take action on all errors, notices and warnings EXCEPT\n; those related to E_NOTICE and E_STRICT, which together cover best practices and\n; recommended coding standards in PHP. For performance reasons, this is the\n; recommend error reporting setting. Your production server shouldn't be wasting\n; resources complaining about best practices and coding standards. That's what\n; development servers and development settings are for.\n; Note: The php.ini-development file has this setting as E_ALL. This\n; means it pretty much reports everything which is exactly what you want during\n; development and early testing.\n;\n; Error Level Constants:\n; E_ALL             - All errors and warnings (includes E_STRICT as of PHP 5.4.0)\n; E_ERROR           - fatal run-time errors\n; E_RECOVERABLE_ERROR  - almost fatal run-time errors\n; E_WARNING         - run-time warnings (non-fatal errors)\n; E_PARSE           - compile-time parse errors\n; E_NOTICE          - run-time notices (these are warnings which often result\n;                     from a bug in your code, but it's possible that it was\n;                     intentional (e.g., using an uninitialized variable and\n;                     relying on the fact it's automatically initialized to an\n;                     empty string)\n; E_STRICT          - run-time notices, enable to have PHP suggest changes\n;                     to your code which will ensure the best interoperability\n;                     and forward compatibility of your code\n; E_CORE_ERROR      - fatal errors that occur during PHP's initial startup\n; E_CORE_WARNING    - warnings (non-fatal errors) that occur during PHP's\n;                     initial startup\n; E_COMPILE_ERROR   - fatal compile-time errors\n; E_COMPILE_WARNING - compile-time warnings (non-fatal errors)\n; E_USER_ERROR      - user-generated error message\n; E_USER_WARNING    - user-generated warning message\n; E_USER_NOTICE     - user-generated notice message\n; E_DEPRECATED      - warn about code that will not work in future versions\n;                     of PHP\n; E_USER_DEPRECATED - user-generated deprecation warnings\n;\n; Common Values:\n;   E_ALL (Show all errors, warnings and notices including coding standards.)\n;   E_ALL & ~E_NOTICE  (Show all errors, except for notices)\n;   E_ALL & ~E_NOTICE & ~E_STRICT  (Show all errors, except for notices and coding standards warnings.)\n;   E_COMPILE_ERROR|E_RECOVERABLE_ERROR|E_ERROR|E_CORE_ERROR  (Show only errors)\n; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED\n; Development Value: E_ALL\n; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT\n; http://php.net/error-reporting\nerror_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT\n\n; This directive controls whether or not and where PHP will output errors,\n; notices and warnings too. Error output is very useful during development, but\n; it could be very dangerous in production environments. Depending on the code\n; which is triggering the error, sensitive information could potentially leak\n; out of your application such as database usernames and passwords or worse.\n; It's recommended that errors be logged on production servers rather than\n; having the errors sent to STDOUT.\n; Possible Values:\n;   Off = Do not display any errors\n;   stderr = Display errors to STDERR (affects only CGI/CLI binaries!)\n;   On or stdout = Display errors to STDOUT\n; Default Value: On\n; Development Value: On\n; Production Value: Off\n; http://php.net/display-errors\ndisplay_errors = Off\n\n; The display of errors which occur during PHP's startup sequence are handled\n; separately from display_errors. PHP's default behavior is to suppress those\n; errors from clients. Turning the display of startup errors on can be useful in\n; debugging configuration problems. But, it's strongly recommended that you\n; leave this setting off on production servers.\n; Default Value: Off\n; Development Value: On\n; Production Value: Off\n; http://php.net/display-startup-errors\ndisplay_startup_errors = Off\n\n; Besides displaying errors, PHP can also log errors to locations such as a\n; server-specific log, STDERR, or a location specified by the error_log\n; directive found below. While errors should not be displayed on productions\n; servers they should still be monitored and logging is a great way to do that.\n; Default Value: Off\n; Development Value: On\n; Production Value: On\n; http://php.net/log-errors\nlog_errors = On\n\n; Set maximum length of log_errors. In error_log information about the source is\n; added. The default is 1024 and 0 allows to not apply any maximum length at all.\n; http://php.net/log-errors-max-len\nlog_errors_max_len = 1024\n\n; Do not log repeated messages. Repeated errors must occur in same file on same\n; line unless ignore_repeated_source is set true.\n; http://php.net/ignore-repeated-errors\nignore_repeated_errors = Off\n\n; Ignore source of message when ignoring repeated messages. When this setting\n; is On you will not log errors with repeated messages from different files or\n; source lines.\n; http://php.net/ignore-repeated-source\nignore_repeated_source = Off\n\n; If this parameter is set to Off, then memory leaks will not be shown (on\n; stdout or in the log). This has only effect in a debug compile, and if\n; error reporting includes E_WARNING in the allowed list\n; http://php.net/report-memleaks\nreport_memleaks = On\n\n; This setting is on by default.\n;report_zend_debug = 0\n\n; Store the last error/warning message in $php_errormsg (boolean). Setting this value\n; to On can assist in debugging and is appropriate for development servers. It should\n; however be disabled on production servers.\n; Default Value: Off\n; Development Value: On\n; Production Value: Off\n; http://php.net/track-errors\ntrack_errors = Off\n\n; Turn off normal error reporting and emit XML-RPC error XML\n; http://php.net/xmlrpc-errors\n;xmlrpc_errors = 0\n\n; An XML-RPC faultCode\n;xmlrpc_error_number = 0\n\n; When PHP displays or logs an error, it has the capability of formatting the\n; error message as HTML for easier reading. This directive controls whether\n; the error message is formatted as HTML or not.\n; Note: This directive is hardcoded to Off for the CLI SAPI\n; Default Value: On\n; Development Value: On\n; Production value: On\n; http://php.net/html-errors\nhtml_errors = On\n\n; If html_errors is set to On *and* docref_root is not empty, then PHP\n; produces clickable error messages that direct to a page describing the error\n; or function causing the error in detail.\n; You can download a copy of the PHP manual from http://php.net/docs\n; and change docref_root to the base URL of your local copy including the\n; leading '/'. You must also specify the file extension being used including\n; the dot. PHP's default behavior is to leave these settings empty, in which\n; case no links to documentation are generated.\n; Note: Never use this feature for production boxes.\n; http://php.net/docref-root\n; Examples\n;docref_root = \"/phpmanual/\"\n\n; http://php.net/docref-ext\n;docref_ext = .html\n\n; String to output before an error message. PHP's default behavior is to leave\n; this setting blank.\n; http://php.net/error-prepend-string\n; Example:\n;error_prepend_string = \"<span style='color: #ff0000'>\"\n\n; String to output after an error message. PHP's default behavior is to leave\n; this setting blank.\n; http://php.net/error-append-string\n; Example:\n;error_append_string = \"</span>\"\n\n; Log errors to specified file. PHP's default behavior is to leave this value\n; empty.\n; http://php.net/error-log\n; Example:\n;error_log = php_errors.log\n; Log errors to syslog (Event Log on NT, not valid in Windows 95).\n;error_log = syslog\n\n;windows.show_crt_warning\n; Default value: 0\n; Development value: 0\n; Production value: 0\n\n;;;;;;;;;;;;;;;;;\n; Data Handling ;\n;;;;;;;;;;;;;;;;;\n\n; The separator used in PHP generated URLs to separate arguments.\n; PHP's default setting is \"&\".\n; http://php.net/arg-separator.output\n; Example:\n;arg_separator.output = \"&amp;\"\n\n; List of separator(s) used by PHP to parse input URLs into variables.\n; PHP's default setting is \"&\".\n; NOTE: Every character in this directive is considered as separator!\n; http://php.net/arg-separator.input\n; Example:\n;arg_separator.input = \";&\"\n\n; This directive determines which super global arrays are registered when PHP\n; starts up. G,P,C,E & S are abbreviations for the following respective super\n; globals: GET, POST, COOKIE, ENV and SERVER. There is a performance penalty\n; paid for the registration of these arrays and because ENV is not as commonly\n; used as the others, ENV is not recommended on productions servers. You\n; can still get access to the environment variables through getenv() should you\n; need to.\n; Default Value: \"EGPCS\"\n; Development Value: \"GPCS\"\n; Production Value: \"GPCS\";\n; http://php.net/variables-order\nvariables_order = \"GPCS\"\n\n; This directive determines which super global data (G,P,C,E & S) should\n; be registered into the super global array REQUEST. If so, it also determines\n; the order in which that data is registered. The values for this directive are\n; specified in the same manner as the variables_order directive, EXCEPT one.\n; Leaving this value empty will cause PHP to use the value set in the\n; variables_order directive. It does not mean it will leave the super globals\n; array REQUEST empty.\n; Default Value: None\n; Development Value: \"GP\"\n; Production Value: \"GP\"\n; http://php.net/request-order\nrequest_order = \"GP\"\n\n; This directive determines whether PHP registers $argv & $argc each time it\n; runs. $argv contains an array of all the arguments passed to PHP when a script\n; is invoked. $argc contains an integer representing the number of arguments\n; that were passed when the script was invoked. These arrays are extremely\n; useful when running scripts from the command line. When this directive is\n; enabled, registering these variables consumes CPU cycles and memory each time\n; a script is executed. For performance reasons, this feature should be disabled\n; on production servers.\n; Note: This directive is hardcoded to On for the CLI SAPI\n; Default Value: On\n; Development Value: Off\n; Production Value: Off\n; http://php.net/register-argc-argv\nregister_argc_argv = Off\n\n; When enabled, the ENV, REQUEST and SERVER variables are created when they're\n; first used (Just In Time) instead of when the script starts. If these\n; variables are not used within a script, having this directive on will result\n; in a performance gain. The PHP directive register_argc_argv must be disabled\n; for this directive to have any affect.\n; http://php.net/auto-globals-jit\nauto_globals_jit = On\n\n; Whether PHP will read the POST data.\n; This option is enabled by default.\n; Most likely, you won't want to disable this option globally. It causes $_POST\n; and $_FILES to always be empty; the only way you will be able to read the\n; POST data will be through the php://input stream wrapper. This can be useful\n; to proxy requests or to process the POST data in a memory efficient fashion.\n; http://php.net/enable-post-data-reading\n;enable_post_data_reading = Off\n\n; Maximum size of POST data that PHP will accept.\n; Its value may be 0 to disable the limit. It is ignored if POST data reading\n; is disabled through enable_post_data_reading.\n; http://php.net/post-max-size\npost_max_size = 8M\n\n; Automatically add files before PHP document.\n; http://php.net/auto-prepend-file\nauto_prepend_file =\n\n; Automatically add files after PHP document.\n; http://php.net/auto-append-file\nauto_append_file =\n\n; By default, PHP will output a character encoding using\n; the Content-type: header.  To disable sending of the charset, simply\n; set it to be empty.\n;\n; PHP's built-in default is text/html\n; http://php.net/default-mimetype\ndefault_mimetype = \"text/html\"\n\n; PHP's default character set is set to empty.\n; http://php.net/default-charset\n;default_charset = \"UTF-8\"\n\n; Always populate the $HTTP_RAW_POST_DATA variable. PHP's default behavior is\n; to disable this feature. If post reading is disabled through\n; enable_post_data_reading, $HTTP_RAW_POST_DATA is *NOT* populated.\n; http://php.net/always-populate-raw-post-data\n;always_populate_raw_post_data = On\n\n;;;;;;;;;;;;;;;;;;;;;;;;;\n; Paths and Directories ;\n;;;;;;;;;;;;;;;;;;;;;;;;;\n\n; UNIX: \"/path1:/path2\"\n;include_path = \".:/usr/share/php\"\n;\n; Windows: \"\\path1;\\path2\"\n;include_path = \".;c:\\php\\includes\"\n;\n; PHP's default setting for include_path is \".;/path/to/php/pear\"\n; http://php.net/include-path\n\n; The root of the PHP pages, used only if nonempty.\n; if PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root\n; if you are running php as a CGI under any web server (other than IIS)\n; see documentation for security issues.  The alternate is to use the\n; cgi.force_redirect configuration below\n; http://php.net/doc-root\ndoc_root =\n\n; The directory under which PHP opens the script using /~username used only\n; if nonempty.\n; http://php.net/user-dir\nuser_dir =\n\n; Directory in which the loadable extensions (modules) reside.\n; http://php.net/extension-dir\n; extension_dir = \"./\"\n; On windows:\n; extension_dir = \"ext\"\n\n; Directory where the temporary files should be placed.\n; Defaults to the system default (see sys_get_temp_dir)\n; sys_temp_dir = \"/tmp\"\n\n; Whether or not to enable the dl() function.  The dl() function does NOT work\n; properly in multithreaded servers, such as IIS or Zeus, and is automatically\n; disabled on them.\n; http://php.net/enable-dl\nenable_dl = Off\n\n; cgi.force_redirect is necessary to provide security running PHP as a CGI under\n; most web servers.  Left undefined, PHP turns this on by default.  You can\n; turn it off here AT YOUR OWN RISK\n; **You CAN safely turn this off for IIS, in fact, you MUST.**\n; http://php.net/cgi.force-redirect\n;cgi.force_redirect = 1\n\n; if cgi.nph is enabled it will force cgi to always sent Status: 200 with\n; every request. PHP's default behavior is to disable this feature.\n;cgi.nph = 1\n\n; if cgi.force_redirect is turned on, and you are not running under Apache or Netscape\n; (iPlanet) web servers, you MAY need to set an environment variable name that PHP\n; will look for to know it is OK to continue execution.  Setting this variable MAY\n; cause security issues, KNOW WHAT YOU ARE DOING FIRST.\n; http://php.net/cgi.redirect-status-env\n;cgi.redirect_status_env =\n\n; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.  PHP's\n; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok\n; what PATH_INFO is.  For more information on PATH_INFO, see the cgi specs.  Setting\n; this to 1 will cause PHP CGI to fix its paths to conform to the spec.  A setting\n; of zero causes PHP to behave as before.  Default is 1.  You should fix your scripts\n; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.\n; http://php.net/cgi.fix-pathinfo\n;cgi.fix_pathinfo=1\n\n; FastCGI under IIS (on WINNT based OS) supports the ability to impersonate\n; security tokens of the calling client.  This allows IIS to define the\n; security context that the request runs under.  mod_fastcgi under Apache\n; does not currently support this feature (03/17/2002)\n; Set to 1 if running under IIS.  Default is zero.\n; http://php.net/fastcgi.impersonate\n;fastcgi.impersonate = 1\n\n; Disable logging through FastCGI connection. PHP's default behavior is to enable\n; this feature.\n;fastcgi.logging = 0\n\n; cgi.rfc2616_headers configuration option tells PHP what type of headers to\n; use when sending HTTP response code. If it's set 0 PHP sends Status: header that\n; is supported by Apache. When this option is set to 1 PHP will send\n; RFC2616 compliant header.\n; Default is zero.\n; http://php.net/cgi.rfc2616-headers\n;cgi.rfc2616_headers = 0\n\n;;;;;;;;;;;;;;;;\n; File Uploads ;\n;;;;;;;;;;;;;;;;\n\n; Whether to allow HTTP file uploads.\n; http://php.net/file-uploads\nfile_uploads = On\n\n; Temporary directory for HTTP uploaded files (will use system default if not\n; specified).\n; http://php.net/upload-tmp-dir\n;upload_tmp_dir =\n\n; Maximum allowed size for uploaded files.\n; http://php.net/upload-max-filesize\nupload_max_filesize = 200M\n\n; Maximum number of files that can be uploaded via a single request\nmax_file_uploads = 20\n\n;;;;;;;;;;;;;;;;;;\n; Fopen wrappers ;\n;;;;;;;;;;;;;;;;;;\n\n; Whether to allow the treatment of URLs (like http:// or ftp://) as files.\n; http://php.net/allow-url-fopen\nallow_url_fopen = On\n\n; Whether to allow include/require to open URLs (like http:// or ftp://) as files.\n; http://php.net/allow-url-include\nallow_url_include = Off\n\n; Define the anonymous ftp password (your email address). PHP's default setting\n; for this is empty.\n; http://php.net/from\n;from=\"john@doe.com\"\n\n; Define the User-Agent string. PHP's default setting for this is empty.\n; http://php.net/user-agent\n;user_agent=\"PHP\"\n\n; Default timeout for socket based streams (seconds)\n; http://php.net/default-socket-timeout\ndefault_socket_timeout = 60\n\n; If your scripts have to deal with files from Macintosh systems,\n; or you are running on a Mac and need to deal with files from\n; unix or win32 systems, setting this flag will cause PHP to\n; automatically detect the EOL character in those files so that\n; fgets() and file() will work regardless of the source of the file.\n; http://php.net/auto-detect-line-endings\n;auto_detect_line_endings = Off\n\n;;;;;;;;;;;;;;;;;;;;;;\n; Dynamic Extensions ;\n;;;;;;;;;;;;;;;;;;;;;;\n\n; If you wish to have an extension loaded automatically, use the following\n; syntax:\n;\n;   extension=modulename.extension\n;\n; For example, on Windows:\n;\n;   extension=msql.dll\n;\n; ... or under UNIX:\n;\n;   extension=msql.so\n;\n; ... or with a path:\n;\n;   extension=/path/to/extension/msql.so\n;\n; If you only provide the name of the extension, PHP will look for it in its\n; default extension directory.\n;\n\n;;;;;;;;;;;;;;;;;;;\n; Module Settings ;\n;;;;;;;;;;;;;;;;;;;\n\n[CLI Server]\n; Whether the CLI web server uses ANSI color coding in its terminal output.\ncli_server.color = On\n\n[Date]\n; Defines the default timezone used by the date functions\n; http://php.net/date.timezone\n;date.timezone =\n\n; http://php.net/date.default-latitude\n;date.default_latitude = 31.7667\n\n; http://php.net/date.default-longitude\n;date.default_longitude = 35.2333\n\n; http://php.net/date.sunrise-zenith\n;date.sunrise_zenith = 90.583333\n\n; http://php.net/date.sunset-zenith\n;date.sunset_zenith = 90.583333\n\n[filter]\n; http://php.net/filter.default\n;filter.default = unsafe_raw\n\n; http://php.net/filter.default-flags\n;filter.default_flags =\n\n[iconv]\n;iconv.input_encoding = ISO-8859-1\n;iconv.internal_encoding = ISO-8859-1\n;iconv.output_encoding = ISO-8859-1\n\n[intl]\n;intl.default_locale =\n; This directive allows you to produce PHP errors when some error\n; happens within intl functions. The value is the level of the error produced.\n; Default is 0, which does not produce any errors.\n;intl.error_level = E_WARNING\n\n[sqlite]\n; http://php.net/sqlite.assoc-case\n;sqlite.assoc_case = 0\n\n[sqlite3]\n;sqlite3.extension_dir =\n\n[Pcre]\n;PCRE library backtracking limit.\n; http://php.net/pcre.backtrack-limit\n;pcre.backtrack_limit=100000\n\n;PCRE library recursion limit.\n;Please note that if you set this value to a high number you may consume all\n;the available process stack and eventually crash PHP (due to reaching the\n;stack size limit imposed by the Operating System).\n; http://php.net/pcre.recursion-limit\n;pcre.recursion_limit=100000\n\n[Pdo]\n; Whether to pool ODBC connections. Can be one of \"strict\", \"relaxed\" or \"off\"\n; http://php.net/pdo-odbc.connection-pooling\n;pdo_odbc.connection_pooling=strict\n\n;pdo_odbc.db2_instance_name\n\n[Pdo_mysql]\n; If mysqlnd is used: Number of cache slots for the internal result set cache\n; http://php.net/pdo_mysql.cache_size\npdo_mysql.cache_size = 2000\n\n; Default socket name for local MySQL connects.  If empty, uses the built-in\n; MySQL defaults.\n; http://php.net/pdo_mysql.default-socket\npdo_mysql.default_socket=\n\n[Phar]\n; http://php.net/phar.readonly\n;phar.readonly = On\n\n; http://php.net/phar.require-hash\n;phar.require_hash = On\n\n;phar.cache_list =\n\n[mail function]\n; For Win32 only.\n; http://php.net/smtp\nSMTP = localhost\n; http://php.net/smtp-port\nsmtp_port = 25\n\n; For Win32 only.\n; http://php.net/sendmail-from\n;sendmail_from = me@example.com\n\n; For Unix only.  You may supply arguments as well (default: \"sendmail -t -i\").\n; http://php.net/sendmail-path\n;sendmail_path =\n\n; Force the addition of the specified parameters to be passed as extra parameters\n; to the sendmail binary. These parameters will always replace the value of\n; the 5th parameter to mail(), even in safe mode.\n;mail.force_extra_parameters =\n\n; Add X-PHP-Originating-Script: that will include uid of the script followed by the filename\nmail.add_x_header = On\n\n; The path to a log file that will log all mail() calls. Log entries include\n; the full path of the script, line number, To address and headers.\n;mail.log =\n; Log mail to syslog (Event Log on NT, not valid in Windows 95).\n;mail.log = syslog\n\n[SQL]\n; http://php.net/sql.safe-mode\nsql.safe_mode = Off\n\n[ODBC]\n; http://php.net/odbc.default-db\n;odbc.default_db    =  Not yet implemented\n\n; http://php.net/odbc.default-user\n;odbc.default_user  =  Not yet implemented\n\n; http://php.net/odbc.default-pw\n;odbc.default_pw    =  Not yet implemented\n\n; Controls the ODBC cursor model.\n; Default: SQL_CURSOR_STATIC (default).\n;odbc.default_cursortype\n\n; Allow or prevent persistent links.\n; http://php.net/odbc.allow-persistent\nodbc.allow_persistent = On\n\n; Check that a connection is still valid before reuse.\n; http://php.net/odbc.check-persistent\nodbc.check_persistent = On\n\n; Maximum number of persistent links.  -1 means no limit.\n; http://php.net/odbc.max-persistent\nodbc.max_persistent = -1\n\n; Maximum number of links (persistent + non-persistent).  -1 means no limit.\n; http://php.net/odbc.max-links\nodbc.max_links = -1\n\n; Handling of LONG fields.  Returns number of bytes to variables.  0 means\n; passthru.\n; http://php.net/odbc.defaultlrl\nodbc.defaultlrl = 4096\n\n; Handling of binary data.  0 means passthru, 1 return as is, 2 convert to char.\n; See the documentation on odbc_binmode and odbc_longreadlen for an explanation\n; of odbc.defaultlrl and odbc.defaultbinmode\n; http://php.net/odbc.defaultbinmode\nodbc.defaultbinmode = 1\n\n;birdstep.max_links = -1\n\n[Interbase]\n; Allow or prevent persistent links.\nibase.allow_persistent = 1\n\n; Maximum number of persistent links.  -1 means no limit.\nibase.max_persistent = -1\n\n; Maximum number of links (persistent + non-persistent).  -1 means no limit.\nibase.max_links = -1\n\n; Default database name for ibase_connect().\n;ibase.default_db =\n\n; Default username for ibase_connect().\n;ibase.default_user =\n\n; Default password for ibase_connect().\n;ibase.default_password =\n\n; Default charset for ibase_connect().\n;ibase.default_charset =\n\n; Default timestamp format.\nibase.timestampformat = \"%Y-%m-%d %H:%M:%S\"\n\n; Default date format.\nibase.dateformat = \"%Y-%m-%d\"\n\n; Default time format.\nibase.timeformat = \"%H:%M:%S\"\n\n[MySQL]\n; Allow accessing, from PHP's perspective, local files with LOAD DATA statements\n; http://php.net/mysql.allow_local_infile\nmysql.allow_local_infile = On\n\n; Allow or prevent persistent links.\n; http://php.net/mysql.allow-persistent\nmysql.allow_persistent = On\n\n; If mysqlnd is used: Number of cache slots for the internal result set cache\n; http://php.net/mysql.cache_size\nmysql.cache_size = 2000\n\n; Maximum number of persistent links.  -1 means no limit.\n; http://php.net/mysql.max-persistent\nmysql.max_persistent = -1\n\n; Maximum number of links (persistent + non-persistent).  -1 means no limit.\n; http://php.net/mysql.max-links\nmysql.max_links = -1\n\n; Default port number for mysql_connect().  If unset, mysql_connect() will use\n; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the\n; compile-time value defined MYSQL_PORT (in that order).  Win32 will only look\n; at MYSQL_PORT.\n; http://php.net/mysql.default-port\nmysql.default_port =\n\n; Default socket name for local MySQL connects.  If empty, uses the built-in\n; MySQL defaults.\n; http://php.net/mysql.default-socket\nmysql.default_socket =\n\n; Default host for mysql_connect() (doesn't apply in safe mode).\n; http://php.net/mysql.default-host\nmysql.default_host =\n\n; Default user for mysql_connect() (doesn't apply in safe mode).\n; http://php.net/mysql.default-user\nmysql.default_user =\n\n; Default password for mysql_connect() (doesn't apply in safe mode).\n; Note that this is generally a *bad* idea to store passwords in this file.\n; *Any* user with PHP access can run 'echo get_cfg_var(\"mysql.default_password\")\n; and reveal this password!  And of course, any users with read access to this\n; file will be able to reveal the password as well.\n; http://php.net/mysql.default-password\nmysql.default_password =\n\n; Maximum time (in seconds) for connect timeout. -1 means no limit\n; http://php.net/mysql.connect-timeout\nmysql.connect_timeout = 60\n\n; Trace mode. When trace_mode is active (=On), warnings for table/index scans and\n; SQL-Errors will be displayed.\n; http://php.net/mysql.trace-mode\nmysql.trace_mode = Off\n\n[MySQLi]\n\n; Maximum number of persistent links.  -1 means no limit.\n; http://php.net/mysqli.max-persistent\nmysqli.max_persistent = -1\n\n; Allow accessing, from PHP's perspective, local files with LOAD DATA statements\n; http://php.net/mysqli.allow_local_infile\n;mysqli.allow_local_infile = On\n\n; Allow or prevent persistent links.\n; http://php.net/mysqli.allow-persistent\nmysqli.allow_persistent = On\n\n; Maximum number of links.  -1 means no limit.\n; http://php.net/mysqli.max-links\nmysqli.max_links = -1\n\n; If mysqlnd is used: Number of cache slots for the internal result set cache\n; http://php.net/mysqli.cache_size\nmysqli.cache_size = 2000\n\n; Default port number for mysqli_connect().  If unset, mysqli_connect() will use\n; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the\n; compile-time value defined MYSQL_PORT (in that order).  Win32 will only look\n; at MYSQL_PORT.\n; http://php.net/mysqli.default-port\nmysqli.default_port = 3306\n\n; Default socket name for local MySQL connects.  If empty, uses the built-in\n; MySQL defaults.\n; http://php.net/mysqli.default-socket\nmysqli.default_socket =\n\n; Default host for mysql_connect() (doesn't apply in safe mode).\n; http://php.net/mysqli.default-host\nmysqli.default_host =\n\n; Default user for mysql_connect() (doesn't apply in safe mode).\n; http://php.net/mysqli.default-user\nmysqli.default_user =\n\n; Default password for mysqli_connect() (doesn't apply in safe mode).\n; Note that this is generally a *bad* idea to store passwords in this file.\n; *Any* user with PHP access can run 'echo get_cfg_var(\"mysqli.default_pw\")\n; and reveal this password!  And of course, any users with read access to this\n; file will be able to reveal the password as well.\n; http://php.net/mysqli.default-pw\nmysqli.default_pw =\n\n; Allow or prevent reconnect\nmysqli.reconnect = Off\n\n[mysqlnd]\n; Enable / Disable collection of general statistics by mysqlnd which can be\n; used to tune and monitor MySQL operations.\n; http://php.net/mysqlnd.collect_statistics\nmysqlnd.collect_statistics = On\n\n; Enable / Disable collection of memory usage statistics by mysqlnd which can be\n; used to tune and monitor MySQL operations.\n; http://php.net/mysqlnd.collect_memory_statistics\nmysqlnd.collect_memory_statistics = Off\n\n; Size of a pre-allocated buffer used when sending commands to MySQL in bytes.\n; http://php.net/mysqlnd.net_cmd_buffer_size\n;mysqlnd.net_cmd_buffer_size = 2048\n\n; Size of a pre-allocated buffer used for reading data sent by the server in\n; bytes.\n; http://php.net/mysqlnd.net_read_buffer_size\n;mysqlnd.net_read_buffer_size = 32768\n\n[OCI8]\n\n; Connection: Enables privileged connections using external\n; credentials (OCI_SYSOPER, OCI_SYSDBA)\n; http://php.net/oci8.privileged-connect\n;oci8.privileged_connect = Off\n\n; Connection: The maximum number of persistent OCI8 connections per\n; process. Using -1 means no limit.\n; http://php.net/oci8.max-persistent\n;oci8.max_persistent = -1\n\n; Connection: The maximum number of seconds a process is allowed to\n; maintain an idle persistent connection. Using -1 means idle\n; persistent connections will be maintained forever.\n; http://php.net/oci8.persistent-timeout\n;oci8.persistent_timeout = -1\n\n; Connection: The number of seconds that must pass before issuing a\n; ping during oci_pconnect() to check the connection validity. When\n; set to 0, each oci_pconnect() will cause a ping. Using -1 disables\n; pings completely.\n; http://php.net/oci8.ping-interval\n;oci8.ping_interval = 60\n\n; Connection: Set this to a user chosen connection class to be used\n; for all pooled server requests with Oracle 11g Database Resident\n; Connection Pooling (DRCP).  To use DRCP, this value should be set to\n; the same string for all web servers running the same application,\n; the database pool must be configured, and the connection string must\n; specify to use a pooled server.\n;oci8.connection_class =\n\n; High Availability: Using On lets PHP receive Fast Application\n; Notification (FAN) events generated when a database node fails. The\n; database must also be configured to post FAN events.\n;oci8.events = Off\n\n; Tuning: This option enables statement caching, and specifies how\n; many statements to cache. Using 0 disables statement caching.\n; http://php.net/oci8.statement-cache-size\n;oci8.statement_cache_size = 20\n\n; Tuning: Enables statement prefetching and sets the default number of\n; rows that will be fetched automatically after statement execution.\n; http://php.net/oci8.default-prefetch\n;oci8.default_prefetch = 100\n\n; Compatibility. Using On means oci_close() will not close\n; oci_connect() and oci_new_connect() connections.\n; http://php.net/oci8.old-oci-close-semantics\n;oci8.old_oci_close_semantics = Off\n\n[PostgreSQL]\n; Allow or prevent persistent links.\n; http://php.net/pgsql.allow-persistent\npgsql.allow_persistent = On\n\n; Detect broken persistent links always with pg_pconnect().\n; Auto reset feature requires a little overheads.\n; http://php.net/pgsql.auto-reset-persistent\npgsql.auto_reset_persistent = Off\n\n; Maximum number of persistent links.  -1 means no limit.\n; http://php.net/pgsql.max-persistent\npgsql.max_persistent = -1\n\n; Maximum number of links (persistent+non persistent).  -1 means no limit.\n; http://php.net/pgsql.max-links\npgsql.max_links = -1\n\n; Ignore PostgreSQL backends Notice message or not.\n; Notice message logging require a little overheads.\n; http://php.net/pgsql.ignore-notice\npgsql.ignore_notice = 0\n\n; Log PostgreSQL backends Notice message or not.\n; Unless pgsql.ignore_notice=0, module cannot log notice message.\n; http://php.net/pgsql.log-notice\npgsql.log_notice = 0\n\n[Sybase-CT]\n; Allow or prevent persistent links.\n; http://php.net/sybct.allow-persistent\nsybct.allow_persistent = On\n\n; Maximum number of persistent links.  -1 means no limit.\n; http://php.net/sybct.max-persistent\nsybct.max_persistent = -1\n\n; Maximum number of links (persistent + non-persistent).  -1 means no limit.\n; http://php.net/sybct.max-links\nsybct.max_links = -1\n\n; Minimum server message severity to display.\n; http://php.net/sybct.min-server-severity\nsybct.min_server_severity = 10\n\n; Minimum client message severity to display.\n; http://php.net/sybct.min-client-severity\nsybct.min_client_severity = 10\n\n; Set per-context timeout\n; http://php.net/sybct.timeout\n;sybct.timeout=\n\n;sybct.packet_size\n\n; The maximum time in seconds to wait for a connection attempt to succeed before returning failure.\n; Default: one minute\n;sybct.login_timeout=\n\n; The name of the host you claim to be connecting from, for display by sp_who.\n; Default: none\n;sybct.hostname=\n\n; Allows you to define how often deadlocks are to be retried. -1 means \"forever\".\n; Default: 0\n;sybct.deadlock_retry_count=\n\n[bcmath]\n; Number of decimal digits for all bcmath functions.\n; http://php.net/bcmath.scale\nbcmath.scale = 0\n\n[browscap]\n; http://php.net/browscap\n;browscap = extra/browscap.ini\n\n[Session]\n; Handler used to store/retrieve data.\n; http://php.net/session.save-handler\nsession.save_handler = files\n\n; Argument passed to save_handler.  In the case of files, this is the path\n; where data files are stored. Note: Windows users have to change this\n; variable in order to use PHP's session functions.\n;\n; The path can be defined as:\n;\n;     session.save_path = \"N;/path\"\n;\n; where N is an integer.  Instead of storing all the session files in\n; /path, what this will do is use subdirectories N-levels deep, and\n; store the session data in those directories.  This is useful if you\n; or your OS have problems with lots of files in one directory, and is\n; a more efficient layout for servers that handle lots of sessions.\n;\n; NOTE 1: PHP will not create this directory structure automatically.\n;         You can use the script in the ext/session dir for that purpose.\n; NOTE 2: See the section on garbage collection below if you choose to\n;         use subdirectories for session storage\n;\n; The file storage module creates files using mode 600 by default.\n; You can change that by using\n;\n;     session.save_path = \"N;MODE;/path\"\n;\n; where MODE is the octal representation of the mode. Note that this\n; does not overwrite the process's umask.\n; http://php.net/session.save-path\n;session.save_path = \"/var/lib/php5\"\n\n; Whether to use strict session mode.\n; Strict session mode does not accept uninitialized session ID and regenerate\n; session ID if browser sends uninitialized session ID. Strict mode protects\n; applications from session fixation via session adoption vulnerability. It is\n; disabled by default for maximum compatibility, but enabling it is encouraged.\n; https://wiki.php.net/rfc/strict_sessions\nsession.use_strict_mode = 0\n\n; Whether to use cookies.\n; http://php.net/session.use-cookies\nsession.use_cookies = 1\n\n; http://php.net/session.cookie-secure\n;session.cookie_secure =\n\n; This option forces PHP to fetch and use a cookie for storing and maintaining\n; the session id. We encourage this operation as it's very helpful in combating\n; session hijacking when not specifying and managing your own session id. It is\n; not the end all be all of session hijacking defense, but it's a good start.\n; http://php.net/session.use-only-cookies\nsession.use_only_cookies = 1\n\n; Name of the session (used as cookie name).\n; http://php.net/session.name\nsession.name = PHPSESSID\n\n; Initialize session on request startup.\n; http://php.net/session.auto-start\nsession.auto_start = 0\n\n; Lifetime in seconds of cookie or, if 0, until browser is restarted.\n; http://php.net/session.cookie-lifetime\nsession.cookie_lifetime = 0\n\n; The path for which the cookie is valid.\n; http://php.net/session.cookie-path\nsession.cookie_path = /\n\n; The domain for which the cookie is valid.\n; http://php.net/session.cookie-domain\nsession.cookie_domain =\n\n; Whether or not to add the httpOnly flag to the cookie, which makes it inaccessible to browser scripting languages such as JavaScript.\n; http://php.net/session.cookie-httponly\nsession.cookie_httponly =\n\n; Handler used to serialize data.  php is the standard serializer of PHP.\n; http://php.net/session.serialize-handler\nsession.serialize_handler = php\n\n; Defines the probability that the 'garbage collection' process is started\n; on every session initialization. The probability is calculated by using\n; gc_probability/gc_divisor. Where session.gc_probability is the numerator\n; and gc_divisor is the denominator in the equation. Setting this value to 1\n; when the session.gc_divisor value is 100 will give you approximately a 1% chance\n; the gc will run on any give request.\n; Default Value: 1\n; Development Value: 1\n; Production Value: 1\n; http://php.net/session.gc-probability\nsession.gc_probability = 0\n\n; Defines the probability that the 'garbage collection' process is started on every\n; session initialization. The probability is calculated by using the following equation:\n; gc_probability/gc_divisor. Where session.gc_probability is the numerator and\n; session.gc_divisor is the denominator in the equation. Setting this value to 1\n; when the session.gc_divisor value is 100 will give you approximately a 1% chance\n; the gc will run on any give request. Increasing this value to 1000 will give you\n; a 0.1% chance the gc will run on any give request. For high volume production servers,\n; this is a more efficient approach.\n; Default Value: 100\n; Development Value: 1000\n; Production Value: 1000\n; http://php.net/session.gc-divisor\nsession.gc_divisor = 1000\n\n; After this number of seconds, stored data will be seen as 'garbage' and\n; cleaned up by the garbage collection process.\n; http://php.net/session.gc-maxlifetime\nsession.gc_maxlifetime = 1440\n\n; NOTE: If you are using the subdirectory option for storing session files\n;       (see session.save_path above), then garbage collection does *not*\n;       happen automatically.  You will need to do your own garbage\n;       collection through a shell script, cron entry, or some other method.\n;       For example, the following script would is the equivalent of\n;       setting session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):\n;          find /path/to/sessions -cmin +24 -type f | xargs rm\n\n; PHP 4.2 and less have an undocumented feature/bug that allows you to\n; to initialize a session variable in the global scope.\n; PHP 4.3 and later will warn you, if this feature is used.\n; You can disable the feature and the warning separately. At this time,\n; the warning is only displayed, if bug_compat_42 is enabled. This feature\n; introduces some serious security problems if not handled correctly. It's\n; recommended that you do not use this feature on production servers. But you\n; should enable this on development servers and enable the warning as well. If you\n; do not enable the feature on development servers, you won't be warned when it's\n; used and debugging errors caused by this can be difficult to track down.\n; Default Value: On\n; Development Value: On\n; Production Value: Off\n; http://php.net/session.bug-compat-42\nsession.bug_compat_42 = Off\n\n; This setting controls whether or not you are warned by PHP when initializing a\n; session value into the global space. session.bug_compat_42 must be enabled before\n; these warnings can be issued by PHP. See the directive above for more information.\n; Default Value: On\n; Development Value: On\n; Production Value: Off\n; http://php.net/session.bug-compat-warn\nsession.bug_compat_warn = Off\n\n; Check HTTP Referer to invalidate externally stored URLs containing ids.\n; HTTP_REFERER has to contain this substring for the session to be\n; considered as valid.\n; http://php.net/session.referer-check\nsession.referer_check =\n\n; How many bytes to read from the file.\n; http://php.net/session.entropy-length\n;session.entropy_length = 32\n\n; Specified here to create the session id.\n; http://php.net/session.entropy-file\n; Defaults to /dev/urandom\n; On systems that don't have /dev/urandom but do have /dev/arandom, this will default to /dev/arandom\n; If neither are found at compile time, the default is no entropy file.\n; On windows, setting the entropy_length setting will activate the\n; Windows random source (using the CryptoAPI)\n;session.entropy_file = /dev/urandom\n\n; Set to {nocache,private,public,} to determine HTTP caching aspects\n; or leave this empty to avoid sending anti-caching headers.\n; http://php.net/session.cache-limiter\nsession.cache_limiter = nocache\n\n; Document expires after n minutes.\n; http://php.net/session.cache-expire\nsession.cache_expire = 180\n\n; trans sid support is disabled by default.\n; Use of trans sid may risk your users security.\n; Use this option with caution.\n; - User may send URL contains active session ID\n;   to other person via. email/irc/etc.\n; - URL that contains active session ID may be stored\n;   in publicly accessible computer.\n; - User may access your site with the same session ID\n;   always using URL stored in browser's history or bookmarks.\n; http://php.net/session.use-trans-sid\nsession.use_trans_sid = 0\n\n; Select a hash function for use in generating session ids.\n; Possible Values\n;   0  (MD5 128 bits)\n;   1  (SHA-1 160 bits)\n; This option may also be set to the name of any hash function supported by\n; the hash extension. A list of available hashes is returned by the hash_algos()\n; function.\n; http://php.net/session.hash-function\nsession.hash_function = 0\n\n; Define how many bits are stored in each character when converting\n; the binary hash data to something readable.\n; Possible values:\n;   4  (4 bits: 0-9, a-f)\n;   5  (5 bits: 0-9, a-v)\n;   6  (6 bits: 0-9, a-z, A-Z, \"-\", \",\")\n; Default Value: 4\n; Development Value: 5\n; Production Value: 5\n; http://php.net/session.hash-bits-per-character\nsession.hash_bits_per_character = 5\n\n; The URL rewriter will look for URLs in a defined set of HTML tags.\n; form/fieldset are special; if you include them here, the rewriter will\n; add a hidden <input> field with the info which is otherwise appended\n; to URLs.  If you want XHTML conformity, remove the form entry.\n; Note that all valid entries require a \"=\", even if no value follows.\n; Default Value: \"a=href,area=href,frame=src,form=,fieldset=\"\n; Development Value: \"a=href,area=href,frame=src,input=src,form=fakeentry\"\n; Production Value: \"a=href,area=href,frame=src,input=src,form=fakeentry\"\n; http://php.net/url-rewriter.tags\nurl_rewriter.tags = \"a=href,area=href,frame=src,input=src,form=fakeentry\"\n\n; Enable upload progress tracking in $_SESSION\n; Default Value: On\n; Development Value: On\n; Production Value: On\n; http://php.net/session.upload-progress.enabled\n;session.upload_progress.enabled = On\n\n; Cleanup the progress information as soon as all POST data has been read\n; (i.e. upload completed).\n; Default Value: On\n; Development Value: On\n; Production Value: On\n; http://php.net/session.upload-progress.cleanup\n;session.upload_progress.cleanup = On\n\n; A prefix used for the upload progress key in $_SESSION\n; Default Value: \"upload_progress_\"\n; Development Value: \"upload_progress_\"\n; Production Value: \"upload_progress_\"\n; http://php.net/session.upload-progress.prefix\n;session.upload_progress.prefix = \"upload_progress_\"\n\n; The index name (concatenated with the prefix) in $_SESSION\n; containing the upload progress information\n; Default Value: \"PHP_SESSION_UPLOAD_PROGRESS\"\n; Development Value: \"PHP_SESSION_UPLOAD_PROGRESS\"\n; Production Value: \"PHP_SESSION_UPLOAD_PROGRESS\"\n; http://php.net/session.upload-progress.name\n;session.upload_progress.name = \"PHP_SESSION_UPLOAD_PROGRESS\"\n\n; How frequently the upload progress should be updated.\n; Given either in percentages (per-file), or in bytes\n; Default Value: \"1%\"\n; Development Value: \"1%\"\n; Production Value: \"1%\"\n; http://php.net/session.upload-progress.freq\n;session.upload_progress.freq =  \"1%\"\n\n; The minimum delay between updates, in seconds\n; Default Value: 1\n; Development Value: 1\n; Production Value: 1\n; http://php.net/session.upload-progress.min-freq\n;session.upload_progress.min_freq = \"1\"\n\n[MSSQL]\n; Allow or prevent persistent links.\nmssql.allow_persistent = On\n\n; Maximum number of persistent links.  -1 means no limit.\nmssql.max_persistent = -1\n\n; Maximum number of links (persistent+non persistent).  -1 means no limit.\nmssql.max_links = -1\n\n; Minimum error severity to display.\nmssql.min_error_severity = 10\n\n; Minimum message severity to display.\nmssql.min_message_severity = 10\n\n; Compatibility mode with old versions of PHP 3.0.\nmssql.compatibility_mode = Off\n\n; Connect timeout\n;mssql.connect_timeout = 5\n\n; Query timeout\n;mssql.timeout = 60\n\n; Valid range 0 - 2147483647.  Default = 4096.\n;mssql.textlimit = 4096\n\n; Valid range 0 - 2147483647.  Default = 4096.\n;mssql.textsize = 4096\n\n; Limits the number of records in each batch.  0 = all records in one batch.\n;mssql.batchsize = 0\n\n; Specify how datetime and datetim4 columns are returned\n; On => Returns data converted to SQL server settings\n; Off => Returns values as YYYY-MM-DD hh:mm:ss\n;mssql.datetimeconvert = On\n\n; Use NT authentication when connecting to the server\nmssql.secure_connection = Off\n\n; Specify max number of processes. -1 = library default\n; msdlib defaults to 25\n; FreeTDS defaults to 4096\n;mssql.max_procs = -1\n\n; Specify client character set.\n; If empty or not set the client charset from freetds.conf is used\n; This is only used when compiled with FreeTDS\n;mssql.charset = \"ISO-8859-1\"\n\n[Assertion]\n; Assert(expr); active by default.\n; http://php.net/assert.active\n;assert.active = On\n\n; Issue a PHP warning for each failed assertion.\n; http://php.net/assert.warning\n;assert.warning = On\n\n; Don't bail out by default.\n; http://php.net/assert.bail\n;assert.bail = Off\n\n; User-function to be called if an assertion fails.\n; http://php.net/assert.callback\n;assert.callback = 0\n\n; Eval the expression with current error_reporting().  Set to true if you want\n; error_reporting(0) around the eval().\n; http://php.net/assert.quiet-eval\n;assert.quiet_eval = 0\n\n[COM]\n; path to a file containing GUIDs, IIDs or filenames of files with TypeLibs\n; http://php.net/com.typelib-file\n;com.typelib_file =\n\n; allow Distributed-COM calls\n; http://php.net/com.allow-dcom\n;com.allow_dcom = true\n\n; autoregister constants of a components typlib on com_load()\n; http://php.net/com.autoregister-typelib\n;com.autoregister_typelib = true\n\n; register constants casesensitive\n; http://php.net/com.autoregister-casesensitive\n;com.autoregister_casesensitive = false\n\n; show warnings on duplicate constant registrations\n; http://php.net/com.autoregister-verbose\n;com.autoregister_verbose = true\n\n; The default character set code-page to use when passing strings to and from COM objects.\n; Default: system ANSI code page\n;com.code_page=\n\n[mbstring]\n; language for internal character representation.\n; http://php.net/mbstring.language\n;mbstring.language = Japanese\n\n; internal/script encoding.\n; Some encoding cannot work as internal encoding.\n; (e.g. SJIS, BIG5, ISO-2022-*)\n; http://php.net/mbstring.internal-encoding\n;mbstring.internal_encoding = UTF-8\n\n; http input encoding.\n; http://php.net/mbstring.http-input\n;mbstring.http_input = UTF-8\n\n; http output encoding. mb_output_handler must be\n; registered as output buffer to function\n; http://php.net/mbstring.http-output\n;mbstring.http_output = pass\n\n; enable automatic encoding translation according to\n; mbstring.internal_encoding setting. Input chars are\n; converted to internal encoding by setting this to On.\n; Note: Do _not_ use automatic encoding translation for\n;       portable libs/applications.\n; http://php.net/mbstring.encoding-translation\n;mbstring.encoding_translation = Off\n\n; automatic encoding detection order.\n; auto means\n; http://php.net/mbstring.detect-order\n;mbstring.detect_order = auto\n\n; substitute_character used when character cannot be converted\n; one from another\n; http://php.net/mbstring.substitute-character\n;mbstring.substitute_character = none\n\n; overload(replace) single byte functions by mbstring functions.\n; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),\n; etc. Possible values are 0,1,2,4 or combination of them.\n; For example, 7 for overload everything.\n; 0: No overload\n; 1: Overload mail() function\n; 2: Overload str*() functions\n; 4: Overload ereg*() functions\n; http://php.net/mbstring.func-overload\n;mbstring.func_overload = 0\n\n; enable strict encoding detection.\n;mbstring.strict_detection = On\n\n; This directive specifies the regex pattern of content types for which mb_output_handler()\n; is activated.\n; Default: mbstring.http_output_conv_mimetype=^(text/|application/xhtml\\+xml)\n;mbstring.http_output_conv_mimetype=\n\n[gd]\n; Tell the jpeg decode to ignore warnings and try to create\n; a gd image. The warning will then be displayed as notices\n; disabled by default\n; http://php.net/gd.jpeg-ignore-warning\n;gd.jpeg_ignore_warning = 0\n\n[exif]\n; Exif UNICODE user comments are handled as UCS-2BE/UCS-2LE and JIS as JIS.\n; With mbstring support this will automatically be converted into the encoding\n; given by corresponding encode setting. When empty mbstring.internal_encoding\n; is used. For the decode settings you can distinguish between motorola and\n; intel byte order. A decode setting cannot be empty.\n; http://php.net/exif.encode-unicode\n;exif.encode_unicode = ISO-8859-15\n\n; http://php.net/exif.decode-unicode-motorola\n;exif.decode_unicode_motorola = UCS-2BE\n\n; http://php.net/exif.decode-unicode-intel\n;exif.decode_unicode_intel    = UCS-2LE\n\n; http://php.net/exif.encode-jis\n;exif.encode_jis =\n\n; http://php.net/exif.decode-jis-motorola\n;exif.decode_jis_motorola = JIS\n\n; http://php.net/exif.decode-jis-intel\n;exif.decode_jis_intel    = JIS\n\n[Tidy]\n; The path to a default tidy configuration file to use when using tidy\n; http://php.net/tidy.default-config\n;tidy.default_config = /usr/local/lib/php/default.tcfg\n\n; Should tidy clean and repair output automatically?\n; WARNING: Do not use this option if you are generating non-html content\n; such as dynamic images\n; http://php.net/tidy.clean-output\ntidy.clean_output = Off\n\n[soap]\n; Enables or disables WSDL caching feature.\n; http://php.net/soap.wsdl-cache-enabled\nsoap.wsdl_cache_enabled=1\n\n; Sets the directory name where SOAP extension will put cache files.\n; http://php.net/soap.wsdl-cache-dir\nsoap.wsdl_cache_dir=\"/tmp\"\n\n; (time to live) Sets the number of second while cached file will be used\n; instead of original one.\n; http://php.net/soap.wsdl-cache-ttl\nsoap.wsdl_cache_ttl=86400\n\n; Sets the size of the cache limit. (Max. number of WSDL files to cache)\nsoap.wsdl_cache_limit = 5\n\n[sysvshm]\n; A default size of the shared memory segment\n;sysvshm.init_mem = 10000\n\n[ldap]\n; Sets the maximum number of open links or -1 for unlimited.\nldap.max_links = -1\n\n[mcrypt]\n; For more information about mcrypt settings see http://php.net/mcrypt-module-open\n\n; Directory where to load mcrypt algorithms\n; Default: Compiled in into libmcrypt (usually /usr/local/lib/libmcrypt)\n;mcrypt.algorithms_dir=\n\n; Directory where to load mcrypt modes\n; Default: Compiled in into libmcrypt (usually /usr/local/lib/libmcrypt)\n;mcrypt.modes_dir=\n\n[dba]\n;dba.default_handler=\n\n[opcache]\n; Determines if Zend OPCache is enabled\n;opcache.enable=0\n\n; Determines if Zend OPCache is enabled for the CLI version of PHP\n;opcache.enable_cli=0\n\n; The OPcache shared memory storage size.\n;opcache.memory_consumption=64\n\n; The amount of memory for interned strings in Mbytes.\n;opcache.interned_strings_buffer=4\n\n; The maximum number of keys (scripts) in the OPcache hash table.\n; Only numbers between 200 and 100000 are allowed.\n;opcache.max_accelerated_files=2000\n\n; The maximum percentage of \"wasted\" memory until a restart is scheduled.\n;opcache.max_wasted_percentage=5\n\n; When this directive is enabled, the OPcache appends the current working\n; directory to the script key, thus eliminating possible collisions between\n; files with the same name (basename). Disabling the directive improves\n; performance, but may break existing applications.\n;opcache.use_cwd=1\n\n; When disabled, you must reset the OPcache manually or restart the\n; webserver for changes to the filesystem to take effect.\n;opcache.validate_timestamps=1\n\n; How often (in seconds) to check file timestamps for changes to the shared\n; memory storage allocation. (\"1\" means validate once per second, but only\n; once per request. \"0\" means always validate)\n;opcache.revalidate_freq=2\n\n; Enables or disables file search in include_path optimization\n;opcache.revalidate_path=0\n\n; If disabled, all PHPDoc comments are dropped from the code to reduce the\n; size of the optimized code.\n;opcache.save_comments=1\n\n; If disabled, PHPDoc comments are not loaded from SHM, so \"Doc Comments\"\n; may be always stored (save_comments=1), but not loaded by applications\n; that don't need them anyway.\n;opcache.load_comments=1\n\n; If enabled, a fast shutdown sequence is used for the accelerated code\n;opcache.fast_shutdown=0\n\n; Allow file existence override (file_exists, etc.) performance feature.\n;opcache.enable_file_override=0\n\n; A bitmask, where each bit enables or disables the appropriate OPcache\n; passes\n;opcache.optimization_level=0xffffffff\n\n;opcache.inherited_hack=1\n;opcache.dups_fix=0\n\n; The location of the OPcache blacklist file (wildcards allowed).\n; Each OPcache blacklist file is a text file that holds the names of files\n; that should not be accelerated. The file format is to add each filename\n; to a new line. The filename may be a full path or just a file prefix\n; (i.e., /var/www/x  blacklists all the files and directories in /var/www\n; that start with 'x'). Line starting with a ; are ignored (comments).\n;opcache.blacklist_filename=\n\n; Allows exclusion of large files from being cached. By default all files\n; are cached.\n;opcache.max_file_size=0\n\n; Check the cache checksum each N requests.\n; The default value of \"0\" means that the checks are disabled.\n;opcache.consistency_checks=0\n\n; How long to wait (in seconds) for a scheduled restart to begin if the cache\n; is not being accessed.\n;opcache.force_restart_timeout=180\n\n; OPcache error_log file name. Empty string assumes \"stderr\".\n;opcache.error_log=\n\n; All OPcache errors go to the Web server log.\n; By default, only fatal errors (level 0) or errors (level 1) are logged.\n; You can also enable warnings (level 2), info messages (level 3) or\n; debug messages (level 4).\n;opcache.log_verbosity_level=1\n\n; Preferred Shared Memory back-end. Leave empty and let the system decide.\n;opcache.preferred_memory_model=\n\n; Protect the shared memory from unexpected writing during script execution.\n; Useful for internal debugging only.\n;opcache.protect_memory=0\n\n[curl]\n; A default value for the CURLOPT_CAINFO option. This is required to be an\n; absolute path.\n;curl.cainfo =\n\n; Local Variables:\n; tab-width: 4\n; End:\n","markerStore":{"nextMarkerId":1948,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1299":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":1}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1300":{"range":{"start":{"row":0,"column":4},"end":{"row":0,"column":5}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}},"version":2},"history":{"version":2,"nextCheckpointId":4,"undoStack":[{"type":"checkpoint","id":2,"snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":4},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1":{"range":[[0,0],[0,1]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"2":{"range":[[0,4],[0,5]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[804,0],[804,0]],"newRange":[[804,0],[805,0]],"oldText":"","newText":"upload_max_filesize = 200M\n"}},{"type":"change","content":{"oldRange":[[805,0],[806,0]],"newRange":[[805,0],[805,0]],"oldText":"upload_max_filesize = 2M\n","newText":""}},{"type":"checkpoint","id":3,"snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":4},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1299":{"range":[[0,0],[0,1]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true},"1300":{"range":[[0,4],[0,5]],"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/etc/php5/apache2/php.ini","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7b3511bd94804029f35b0358c9c58554804347e1","deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/etc/php5/apache2/php.ini","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/etc/php5/apache2/php.ini","focused":true,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/etc/php5/apache2/php.ini":1437550692576},"metrics":{"sessionLength":13594},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/etc/php5/apache2":{"isExpanded":true,"entries":{"conf.d":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/etc/php5/apache2/php.ini","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}