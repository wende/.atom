{"mode":"editor","version":1,"windowDimensions":{"x":65,"y":24,"width":1301,"height":744,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/iraasta/.atom/tm/autocomplete-elixir"],"buffers":[{"text":"$ = require('jquery')\nString.prototype.replaceAll = (s,r) -> @split(s).join(r)\n\nmodule.exports =\nclass RsenseClient\n  projectPath: null\n  serverUrl: null\n\n  constructor: ->\n    @projectPath = atom.project.getPaths()[0]\n    port = atom.config.get('autocomplete-elixir.port')\n    @serverUrl = \"http://localhost:4321/elixir/complete\"\n\n  checkCompletion: (editor, buffer, row, column, prefix, callback) ->\n    code = buffer.getText().replaceAll '\\n', '\\n'\n\n    $.ajax @serverUrl,\n      type: 'GET'\n      data: {word: prefix}\n      error: (jqXHR, textStatus, errorThrown) ->\n        console.error textStatus\n      success: (data, textStatus, jqXHR) ->\n        console.log data\n        callback(JSON.parse(data).result.map (a)-> {name: a, qualified_name:a, kind:\"elixir\"})\n\n\n    return []\n","markers":{"markers":{"1":{"id":1,"range":[[7,0],[7,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":52,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[11,40],[11,43]]},"newParams":{"tailed":false,"range":[[11,43],[11,43]]},"deserializer":"MarkerPatch"},{"oldRange":[[11,40],[11,43]],"newRange":[[11,40],[11,41]],"oldText":"erl","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[11,41],[11,41]],"newRange":[[11,41],[11,42]],"oldText":"","newText":"l","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[11,42],[11,42]],"newRange":[[11,42],[11,43]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[11,43],[11,43]],"newRange":[[11,43],[11,44]],"oldText":"","newText":"x","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[11,44],[11,44]],"newRange":[[11,44],[11,45]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[11,45],[11,45]],"newRange":[[11,45],[11,46]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[23,85],[23,88]]},"newParams":{"tailed":false,"range":[[23,88],[23,88]]},"deserializer":"MarkerPatch"},{"oldRange":[[23,85],[23,88]],"newRange":[[23,85],[23,86]],"oldText":"erl","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[23,86],[23,86]],"newRange":[[23,86],[23,87]],"oldText":"","newText":"l","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[23,87],[23,87]],"newRange":[[23,87],[23,88]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[23,88],[23,88]],"newRange":[[23,88],[23,89]],"oldText":"","newText":"x","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[23,89],[23,89]],"newRange":[[23,89],[23,90]],"oldText":"","newText":"i","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[23,90],[23,90]],"newRange":[[23,90],[23,91]],"oldText":"","newText":"r","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/tm/autocomplete-elixir/lib/autocomplete-elixir-client.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"d2e8468189dfb07d161067373cca108357360f87","deserializer":"TextBuffer"},{"text":"RsenseClient = require './autocomplete-elixir-client.coffee'\n\nmodule.exports =\nclass RsenseProvider\n  id: 'autocomplete-elixir-elixirprovider'\n  selector: '.source.elixir'\n  rsenseClient: null\n\n  constructor: ->\n    @rsenseClient = new RsenseClient()\n\n  requestHandler: (options) ->\n    return new Promise (resolve) =>\n      # rsense expects 1-based positions\n      row = options.cursor.getBufferRow()\n      col = options.cursor.getBufferColumn()\n\n      prefix = options.editor.getTextInBufferRange([[row ,0],[row, col]])\n      matcher = /\\S*(\\w|:|\\.)$/.exec(prefix)\n      unless matcher then resolve([])\n      prefix = matcher[0]\n      options.prefix = prefix\n\n      completions = @rsenseClient.checkCompletion(options.editor,\n      options.buffer, row, col, options.prefix, (completions) =>\n        suggestions = @findSuggestions(options.prefix, completions)\n        return resolve() unless suggestions?.length\n        return resolve(suggestions)\n      )\n\n  findSuggestions: (prefix, completions) ->\n    if completions?\n      suggestions = []\n      for completion in completions when completion.name isnt prefix\n        kind = completion.kind.toLowerCase()\n        word = completion.name\n        count = parseInt(/\\d*$/.exec(word)) || 0;\n        if count\n          word = word.split(\"/\")[0] + \"(\"\n          i = 0\n          while ++i <= count then word += \"${#{i}:#{i}}\" + (if i != count then \",\" else \")\")\n          word += \"${#{count+1}:_}\"\n        [..., last] = prefix.split(\":\")\n        suggestion =\n          snippet: word\n          prefix: last\n          label: \"#{completion.qualified_name}\"\n        suggestions.push(suggestion)\n      return suggestions\n    return []\n\n  dispose: ->\n","markers":{"markers":{"1":{"id":1,"range":[[19,36],[19,36]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":56,"goalBufferRange":null},"deserializer":"Marker"},"72":{"id":72,"range":[[19,36],[19,37]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"73":{"id":73,"range":[[19,33],[19,34]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[18,25],[18,25]]},"newParams":{"reversed":true,"range":[[18,24],[18,25]]},"deserializer":"MarkerPatch"},{"oldRange":[[18,24],[18,25]],"newRange":[[18,24],[18,24]],"oldText":":","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[18,24],[18,24]],"newRange":[[18,24],[18,25]],"oldText":"","newText":"\\","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[18,25],[18,25]],"newRange":[[18,25],[18,26]],"oldText":"","newText":".","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[18,26],[18,26]]},"newParams":{"range":[[18,25],[18,26]]},"deserializer":"MarkerPatch"},{"oldRange":[[18,25],[18,26]],"newRange":[[18,25],[18,25]],"oldText":".","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[18,25],[18,25]]},"newParams":{"range":[[18,24],[18,25]]},"deserializer":"MarkerPatch"},{"oldRange":[[18,24],[18,25]],"newRange":[[18,24],[18,24]],"oldText":"\\","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[18,24],[18,24]],"newRange":[[18,24],[18,25]],"oldText":"","newText":":","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[18,25],[18,25]],"newRange":[[18,25],[18,26]],"oldText":"","newText":"\\","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[18,26],[18,26]]},"newParams":{"range":[[18,25],[18,26]]},"deserializer":"MarkerPatch"},{"oldRange":[[18,25],[18,26]],"newRange":[[18,25],[18,25]],"oldText":"\\","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[18,25],[18,25]],"newRange":[[18,25],[18,26]],"oldText":"","newText":"|","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[18,26],[18,26]],"newRange":[[18,26],[18,27]],"oldText":"","newText":"\\","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[18,27],[18,27]],"newRange":[[18,27],[18,28]],"oldText":"","newText":".","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/tm/autocomplete-elixir/lib/autocomplete-elixir-provider.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"2a488e46b24fb1105503f4dff8aeb7657c4420cb","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":52,"softTabs":true,"displayBuffer":{"id":53,"softWrapped":false,"editorWidthInChars":null,"scrollTop":77,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/tm/autocomplete-elixir/lib/autocomplete-elixir-client.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":56,"softTabs":true,"displayBuffer":{"id":57,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/tm/autocomplete-elixir/lib/autocomplete-elixir-provider.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/home/iraasta/.atom/tm/autocomplete-elixir/lib/autocomplete-elixir-provider.coffee","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-coffee-script","language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["erlang"],"replaceHistory":["elixir"],"pathsHistory":["elixir"]},"fuzzy-finder":{"/home/iraasta/.atom/tm/autocomplete-elixir/lib/autocomplete-elixir-client.coffee":1427366721087,"/home/iraasta/.atom/tm/autocomplete-elixir/lib/autocomplete-elixir-provider.coffee":1427367001293},"metrics":{"sessionLength":520053},"tree-view":{"directoryExpansionStates":{"/home/iraasta/.atom/tm/autocomplete-elixir":{"isExpanded":true,"entries":{"lib":{"isExpanded":true,"entries":{"server":{"isExpanded":false,"entries":{}}}},"node_modules":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/iraasta/.atom/tm/autocomplete-elixir/lib/autocomplete-elixir-provider.coffee","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}