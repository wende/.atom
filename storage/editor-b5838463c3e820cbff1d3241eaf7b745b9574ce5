{"mode":"editor","version":1,"windowDimensions":{"x":65,"y":24,"width":1301,"height":744,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/home/iraasta/.atom/tm/autocomplete-erlang"],"buffers":[{"text":"$ = require('jquery')\nString.prototype.replaceAll = (s,r) -> @split(s).join(r)\n\nmodule.exports =\nclass RsenseClient\n  projectPath: null\n  serverUrl: null\n\n  constructor: ->\n    @projectPath = atom.project.getPaths()[0]\n    port = atom.config.get('autocomplete-erlang.port')\n    @serverUrl = \"http://localhost:4321/erl/complete\"\n\n  checkCompletion: (editor, buffer, row, column, prefix, callback) ->\n    code = buffer.getText().replaceAll '\\n', '\\n'\n\n    $.ajax @serverUrl,\n      type: 'GET'\n      data: {word: prefix}\n      error: (jqXHR, textStatus, errorThrown) ->\n        console.error textStatus\n      success: (data, textStatus, jqXHR) ->\n        console.log data\n        callback(JSON.parse(data).result.map (a)-> {name: a, qualified_name:a, kind:\"erl\"})\n\n\n    return []\n","markers":{"markers":{"1":{"id":1,"range":[[13,17],[13,17]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":36,"goalBufferRange":null,"autoscroll":true,"preserveFolds":true},"deserializer":"Marker"},"48":{"id":48,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"51":{"id":51,"range":[[15,0],[15,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang-client.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b080317c7994847538c8f815450299432b2d8724","deserializer":"TextBuffer"},{"text":"RsenseClient = require './autocomplete-erlang-client.coffee'\n\nmodule.exports =\nclass RsenseProvider\n  id: 'autocomplete-erlang-erlangprovider'\n  selector: '.source.erlang'\n  rsenseClient: null\n\n  constructor: ->\n    @rsenseClient = new RsenseClient()\n\n  requestHandler: (options) ->\n    return new Promise (resolve) =>\n      # rsense expects 1-based positions\n      row = options.cursor.getBufferRow()\n      col = options.cursor.getBufferColumn()\n\n      prefix = options.editor.getTextInBufferRange([[row ,0],[row, col]])\n      matcher = /\\S*(\\w|:)$/.exec(prefix)\n      unless matcher then resolve([])\n      prefix = matcher[0]\n      options.prefix = prefix\n\n      completions = @rsenseClient.checkCompletion(options.editor,\n      options.buffer, row, col, options.prefix, (completions) =>\n        suggestions = @findSuggestions(options.prefix, completions)\n        return resolve() unless suggestions?.length\n        return resolve(suggestions)\n      )\n\n  findSuggestions: (prefix, completions) ->\n    if completions?\n      suggestions = []\n      for completion in completions when completion.name isnt prefix\n        kind = completion.kind.toLowerCase()\n        word = completion.name\n        count = parseInt(/\\d*$/.exec(word)) || 0;\n        if count\n          word = word.split(\"/\")[0] + \"(\"\n          i = 0\n          while ++i <= count then word += \"${#{i}:#{i}}\" + (if i != count then \",\" else \")\")\n          word += \"${#{count+1}:_}\"\n        [..., last] = prefix.split(\":\")\n        suggestion =\n          snippet: word\n          prefix: last\n          label: \"#{completion.qualified_name}\"\n        suggestions.push(suggestion)\n      return suggestions\n    return []\n\n  dispose: ->\n","markers":{"markers":{"1":{"id":1,"range":[[15,44],[15,44]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":40,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"25":{"id":25,"range":[[15,43],[15,44]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"26":{"id":26,"range":[[15,42],[15,43]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"27":{"id":27,"range":[[14,0],[15,44]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"28":{"id":28,"range":[[17,0],[17,73]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"29":{"id":29,"range":[[15,43],[15,44]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"30":{"id":30,"range":[[15,42],[15,43]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"35":{"id":35,"range":[[14,0],[15,44]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"36":{"id":36,"range":[[17,0],[17,73]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang-provider.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c63f01ed3243bfa5f1fcea622235876a2209c4d0","deserializer":"TextBuffer"},{"text":"RsenseProvider = require './autocomplete-erlang-provider.coffee'\nrequire \"./server/static\"\n\nmodule.exports =\n  config:\n    port:\n      description: 'The port the rsense server is running on'\n      type: 'integer'\n      default: 47367\n      minimum: 1024\n      maximum: 65535\n\n  rsenseProvider: null\n\n  activate: (state) ->\n    @rsenseProvider = new RsenseProvider()\n\n  provideAutocompletion: ->\n    {providers: [@rsenseProvider]}\n\n  deactivate: ->\n    @rsenseProvider?.dispose()\n    @rsenseProvider = null\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":44,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang.coffee","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"75212bdcb845b0ac01fc26b60b05c3b368057c51","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":36,"softTabs":true,"displayBuffer":{"id":37,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang-client.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":40,"softTabs":true,"displayBuffer":{"id":41,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang-provider.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":44,"softTabs":true,"displayBuffer":{"id":45,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang.coffee","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang-client.coffee","focused":false,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-coffee-script","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang-client.coffee":1427470265890,"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang-provider.coffee":1427365043087,"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang.coffee":1427365042052},"metrics":{"sessionLength":166415},"tree-view":{"directoryExpansionStates":{"/home/iraasta/.atom/tm/autocomplete-erlang":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"lib":{"isExpanded":true,"entries":{"server":{"isExpanded":true,"entries":{"build":{"isExpanded":false,"entries":{}},"erlang":{"isExpanded":false,"entries":{}},"node_modules":{"isExpanded":false,"entries":{}},"pty.js":{"isExpanded":false,"entries":{}}}}}},"node_modules":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/home/iraasta/.atom/tm/autocomplete-erlang/lib/autocomplete-erlang-client.coffee","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}